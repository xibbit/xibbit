{"version":3,"file":"socket.io.min.js","sources":["../node_modules/has-cors/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-client/node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/yeast/index.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/node_modules/parseqs/index.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/parseuri/index.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/v3/xmlhttprequest.js","../node_modules/engine.io-client/build/esm/v3/engine.io-parser/utf8.js","../node_modules/engine.io-client/build/esm/v3/has-binary2/index.js","../node_modules/engine.io-client/build/esm/v3/after/index.js","../node_modules/engine.io-client/build/esm/v3/engine.io-parser/keys.js","../node_modules/engine.io-client/build/esm/v3/engine.io-parser/index.js","../node_modules/engine.io-client/build/esm/v3/component-emitter/index.js","../node_modules/engine.io-client/build/esm/v3/transport.js","../node_modules/engine.io-client/build/esm/v3/component-inherit/index.js","../node_modules/ms/index.js","../node_modules/debug/src/common.js","../node_modules/debug/src/browser.js","../node_modules/engine.io-client/build/esm/v3/transports/polling.js","../node_modules/engine.io-client/build/esm/v3/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/v3/transports/polling-jsonp.js","../node_modules/engine.io-client/build/esm/v3/transports/websocket.js","../node_modules/engine.io-client/build/esm/v3/transports/index.js","../node_modules/engine.io-client/build/esm/v3/socket.js","../node_modules/engine.io-client/build/esm/v3/index.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../build/esm/on.js","../build/esm/socket.js","../build/esm/contrib/backo2.js","../build/esm/manager.js","../build/esm/index.js","../build/esm/url.js","../build/esm/v3/url.js","../build/esm/v3/component-emitter/index.js","../build/esm/v3/isarray/index.js","../build/esm/v3/socket.io-parser/is-buffer.js","../build/esm/v3/socket.io-parser/binary.js","../build/esm/v3/socket.io-parser/index.js","../build/esm/v3/to-array/index.js","../build/esm/v3/on.js","../build/esm/v3/component-bind/index.js","../node_modules/parseqs/index.js","../build/esm/v3/has-binary2/index.js","../build/esm/v3/socket.js","../build/esm/v3/indexof/index.js","../build/esm/v3/backo2/index.js","../build/esm/v3/manager.js","../build/esm/v3/index.js","../build/esm/browser-entrypoint.js"],"sourcesContent":["\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","// browser shim for xmlhttprequest module\nimport hasCORS from 'has-cors';\nexport default function (opts) {\n    var xdomain = opts.xdomain;\n    // scheme must be same when usign XDomainRequest\n    // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n    var xscheme = opts.xscheme;\n    // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n    // https://github.com/Automattic/engine.io-client/pull/217\n    var enablesXDR = opts.enablesXDR;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    // Use XDomainRequest for IE8 if enablesXDR is true\n    // because loading bar keeps flashing when using jsonp-polling\n    // https://github.com/yujiosaka/socke.io-ie8-loading-example\n    try {\n        /*    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n              return new XDomainRequest();\n            }*/\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n        }\n        catch (e) { }\n    }\n}\n;\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar stringFromCharCode = String.fromCharCode;\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n    var output = [];\n    var counter = 0;\n    var length = string.length;\n    var value;\n    var extra;\n    while (counter < length) {\n        value = string.charCodeAt(counter++);\n        if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n            // high surrogate, and there is a next character\n            extra = string.charCodeAt(counter++);\n            if ((extra & 0xFC00) == 0xDC00) { // low surrogate\n                output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n            }\n            else {\n                // unmatched surrogate; only append this code unit, in case the next\n                // code unit is the high surrogate of a surrogate pair\n                output.push(value);\n                counter--;\n            }\n        }\n        else {\n            output.push(value);\n        }\n    }\n    return output;\n}\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n    var length = array.length;\n    var index = -1;\n    var value;\n    var output = '';\n    while (++index < length) {\n        value = array[index];\n        if (value > 0xFFFF) {\n            value -= 0x10000;\n            output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n            value = 0xDC00 | value & 0x3FF;\n        }\n        output += stringFromCharCode(value);\n    }\n    return output;\n}\nfunction checkScalarValue(codePoint, strict) {\n    if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n        if (strict) {\n            throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n                ' is not a scalar value');\n        }\n        return false;\n    }\n    return true;\n}\n/*--------------------------------------------------------------------------*/\nfunction createByte(codePoint, shift) {\n    return stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\nfunction encodeCodePoint(codePoint, strict) {\n    if ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n        return stringFromCharCode(codePoint);\n    }\n    var symbol = '';\n    if ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n        symbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n    }\n    else if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n        if (!checkScalarValue(codePoint, strict)) {\n            codePoint = 0xFFFD;\n        }\n        symbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n        symbol += createByte(codePoint, 6);\n    }\n    else if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n        symbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n        symbol += createByte(codePoint, 12);\n        symbol += createByte(codePoint, 6);\n    }\n    symbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n    return symbol;\n}\nfunction utf8encode(string, opts) {\n    opts = opts || {};\n    var strict = false !== opts.strict;\n    var codePoints = ucs2decode(string);\n    var length = codePoints.length;\n    var index = -1;\n    var codePoint;\n    var byteString = '';\n    while (++index < length) {\n        codePoint = codePoints[index];\n        byteString += encodeCodePoint(codePoint, strict);\n    }\n    return byteString;\n}\n/*--------------------------------------------------------------------------*/\nfunction readContinuationByte() {\n    if (byteIndex >= byteCount) {\n        throw Error('Invalid byte index');\n    }\n    var continuationByte = byteArray[byteIndex] & 0xFF;\n    byteIndex++;\n    if ((continuationByte & 0xC0) == 0x80) {\n        return continuationByte & 0x3F;\n    }\n    // If we end up here, it’s not a continuation byte\n    throw Error('Invalid continuation byte');\n}\nfunction decodeSymbol(strict) {\n    var byte1;\n    var byte2;\n    var byte3;\n    var byte4;\n    var codePoint;\n    if (byteIndex > byteCount) {\n        throw Error('Invalid byte index');\n    }\n    if (byteIndex == byteCount) {\n        return false;\n    }\n    // Read first byte\n    byte1 = byteArray[byteIndex] & 0xFF;\n    byteIndex++;\n    // 1-byte sequence (no continuation bytes)\n    if ((byte1 & 0x80) == 0) {\n        return byte1;\n    }\n    // 2-byte sequence\n    if ((byte1 & 0xE0) == 0xC0) {\n        byte2 = readContinuationByte();\n        codePoint = ((byte1 & 0x1F) << 6) | byte2;\n        if (codePoint >= 0x80) {\n            return codePoint;\n        }\n        else {\n            throw Error('Invalid continuation byte');\n        }\n    }\n    // 3-byte sequence (may include unpaired surrogates)\n    if ((byte1 & 0xF0) == 0xE0) {\n        byte2 = readContinuationByte();\n        byte3 = readContinuationByte();\n        codePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n        if (codePoint >= 0x0800) {\n            return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n        }\n        else {\n            throw Error('Invalid continuation byte');\n        }\n    }\n    // 4-byte sequence\n    if ((byte1 & 0xF8) == 0xF0) {\n        byte2 = readContinuationByte();\n        byte3 = readContinuationByte();\n        byte4 = readContinuationByte();\n        codePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n            (byte3 << 0x06) | byte4;\n        if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n            return codePoint;\n        }\n    }\n    throw Error('Invalid UTF-8 detected');\n}\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n    opts = opts || {};\n    var strict = false !== opts.strict;\n    byteArray = ucs2decode(byteString);\n    byteCount = byteArray.length;\n    byteIndex = 0;\n    var codePoints = [];\n    var tmp;\n    while ((tmp = decodeSymbol(strict)) !== false) {\n        codePoints.push(tmp);\n    }\n    return ucs2encode(codePoints);\n}\nconst version = '2.1.2';\nexport default {\n    version,\n    encode: utf8encode,\n    decode: utf8decode\n};\n","/* global Blob File */\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === 'function' ||\n    typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nconst withNativeFile = typeof File === 'function' ||\n    typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\nconst withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n};\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\nexport default function hasBinary(obj, b = false) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n        return true;\n    }\n    // see: https://github.com/Automattic/has-binary/pull/4\n    if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","export default function after(count, callback, err_cb = noop) {\n    var bail = false;\n    err_cb = err_cb || noop;\n    proxy.count = count;\n    return (count === 0) ? callback() : proxy;\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times');\n        }\n        --proxy.count;\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true;\n            callback(err);\n            // future error callbacks will go to error handler\n            callback = err_cb;\n        }\n        else if (proxy.count === 0 && !bail) {\n            callback(null, result);\n        }\n    }\n}\nfunction noop() { }\n","/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\nexport default Object.keys || function keys(obj) {\n    var arr = [];\n    var has = Object.prototype.hasOwnProperty;\n    for (var i in obj) {\n        if (has.call(obj, i)) {\n            arr.push(i);\n        }\n    }\n    return arr;\n};\n","/**\n * Module dependencies.\n */\nimport utf8 from './utf8';\nimport hasBinary from '../has-binary2';\nimport after from '../after';\nimport keys from './keys';\nclass Buffer extends Uint8Array {\n    constructor(length, encoding = '') {\n        super(length);\n        this.encoding = encoding;\n    }\n    static isBuffer(b) {\n        return b instanceof Uint8Array;\n    }\n    static concat(a) {\n        return [].concat.apply([], a);\n    }\n    writeUInt8(v, i) {\n        this[i] = v;\n    }\n}\n/**\n * Current protocol version.\n */\nconst protocol = 3;\n/**\n * Packet types.\n */\nvar packets = {\n    open: 0 // non-ws\n    ,\n    close: 1 // non-ws\n    ,\n    ping: 2,\n    pong: 3,\n    message: 4,\n    upgrade: 5,\n    noop: 6\n};\nvar packetslist = keys(packets);\n/**\n * Premade error packet.\n */\nvar err = { type: 'error', data: 'parser error' };\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\nconst encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n    if (typeof supportsBinary === 'function') {\n        callback = supportsBinary;\n        supportsBinary = null;\n    }\n    if (typeof utf8encode === 'function') {\n        callback = utf8encode;\n        utf8encode = null;\n    }\n    if (Buffer.isBuffer(packet.data)) {\n        return encodeBuffer(packet, supportsBinary, callback);\n    }\n    else if (packet.data && (packet.data.buffer || packet.data) instanceof ArrayBuffer) {\n        return encodeBuffer({ type: packet.type, data: arrayBufferToBuffer(packet.data) }, supportsBinary, callback);\n    }\n    // Sending data as a utf-8 string\n    var encoded = packets[packet.type];\n    // data fragment is optional\n    if (undefined !== packet.data) {\n        encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n    }\n    return callback('' + encoded);\n};\n/**\n * Encode Buffer data\n */\nfunction encodeBuffer(packet, supportsBinary, callback) {\n    if (!supportsBinary) {\n        return encodeBase64Packet(packet, callback);\n    }\n    var data = packet.data;\n    var typeBuffer = new Buffer(1);\n    typeBuffer[0] = packets[packet.type];\n    return callback(Buffer.concat([typeBuffer, data]));\n}\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\nconst encodeBase64Packet = function (packet, callback) {\n    var data = Buffer.isBuffer(packet.data) ? packet.data : arrayBufferToBuffer(packet.data);\n    var message = 'b' + packets[packet.type];\n    message += data.toString('base64');\n    return callback(message);\n};\n/**\n * Decodes a packet. Data also available as an ArrayBuffer if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\nconst decodePacket = function (data, binaryType, utf8decode = false) {\n    if (data === undefined) {\n        return err;\n    }\n    var type;\n    // String data\n    if (typeof data === 'string') {\n        type = data.charAt(0);\n        if (type === 'b') {\n            return decodeBase64Packet(data.substr(1), binaryType);\n        }\n        if (utf8decode) {\n            data = tryDecode(data);\n            if (data === false) {\n                return err;\n            }\n        }\n        if (Number(type) != type || !packetslist[type]) {\n            return err;\n        }\n        if (data.length > 1) {\n            return { type: packetslist[type], data: data.substring(1) };\n        }\n        else {\n            return { type: packetslist[type] };\n        }\n    }\n    // Binary data\n    if (binaryType === 'arraybuffer') {\n        // wrap Buffer/ArrayBuffer data into an Uint8Array\n        var intArray = new Uint8Array(data);\n        type = intArray[0];\n        return { type: packetslist[type], data: intArray.buffer.slice(1) };\n    }\n    if (data instanceof ArrayBuffer) {\n        data = arrayBufferToBuffer(data);\n    }\n    type = data[0];\n    return { type: packetslist[type], data: data.slice(1) };\n};\nfunction tryDecode(data) {\n    try {\n        data = utf8.decode(data, { strict: false });\n    }\n    catch (e) {\n        return false;\n    }\n    return data;\n}\n/**\n * Decodes a packet encoded in a base64 string.\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\nconst decodeBase64Packet = function (msg, binaryType) {\n    var type = packetslist[msg.charAt(0)];\n    var data = new Buffer(msg.substr(1), 'base64');\n    if (binaryType === 'arraybuffer') {\n        var abv = new Uint8Array(data.length);\n        for (var i = 0; i < abv.length; i++) {\n            abv[i] = data[i];\n        }\n        data = abv.buffer;\n    }\n    return { type: type, data: data };\n};\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\nconst encodePayload = function (packets, supportsBinary, callback) {\n    if (typeof supportsBinary === 'function') {\n        callback = supportsBinary;\n        supportsBinary = null;\n    }\n    if (supportsBinary && hasBinary(packets)) {\n        return encodePayloadAsBinary(packets, callback);\n    }\n    if (!packets.length) {\n        return callback('0:');\n    }\n    function encodeOne(packet, doneCallback) {\n        encodePacket(packet, supportsBinary, false, function (message) {\n            doneCallback(null, setLengthHeader(message));\n        });\n    }\n    map(packets, encodeOne, function (err, results) {\n        return callback(results.join(''));\n    });\n};\nfunction setLengthHeader(message) {\n    return message.length + ':' + message;\n}\n/**\n * Async array map using after\n */\nfunction map(ary, each, done) {\n    var result = new Array(ary.length);\n    var next = after(ary.length, done);\n    for (var i = 0; i < ary.length; i++) {\n        each(ary[i], function (error, msg) {\n            result[i] = msg;\n            next(error, result);\n        });\n    }\n}\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\nconst decodePayload = function (data, binaryType, callback) {\n    if (typeof data !== 'string') {\n        return decodePayloadAsBinary(data, binaryType, callback);\n    }\n    if (typeof binaryType === 'function') {\n        callback = binaryType;\n        binaryType = null;\n    }\n    if (data === '') {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n    }\n    var length = '', n, msg, packet;\n    for (var i = 0, l = data.length; i < l; i++) {\n        var chr = data.charAt(i);\n        if (chr !== ':') {\n            length += chr;\n            continue;\n        }\n        if (length === '' || (length != (n = Number(length)))) {\n            // parser error - ignoring payload\n            return callback(err, 0, 1);\n        }\n        msg = data.substr(i + 1, n);\n        if (length != msg.length) {\n            // parser error - ignoring payload\n            return callback(err, 0, 1);\n        }\n        if (msg.length) {\n            packet = decodePacket(msg, binaryType, false);\n            if (err.type === packet.type && err.data === packet.data) {\n                // parser error in individual packet - ignoring payload\n                return callback(err, 0, 1);\n            }\n            var more = callback(packet, i + n, l);\n            if (false === more)\n                return;\n        }\n        // advance cursor\n        i += n;\n        length = '';\n    }\n    if (length !== '') {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n    }\n};\n/**\n *\n * Converts a buffer to a utf8.js encoded string\n *\n * @api private\n */\nfunction bufferToString(buffer) {\n    var str = '';\n    for (var i = 0, l = buffer.length; i < l; i++) {\n        str += String.fromCharCode(buffer[i]);\n    }\n    return str;\n}\n/**\n *\n * Converts a utf8.js encoded string to a buffer\n *\n * @api private\n */\nfunction stringToBuffer(string) {\n    var buf = new Buffer(string.length);\n    for (var i = 0, l = string.length; i < l; i++) {\n        buf.writeUInt8(string.charCodeAt(i), i);\n    }\n    return buf;\n}\n/**\n *\n * Converts an ArrayBuffer to a Buffer\n *\n * @api private\n */\nfunction arrayBufferToBuffer(data) {\n    // data is either an ArrayBuffer or ArrayBufferView.\n    var array = new Uint8Array(data.buffer || data);\n    var length = data.byteLength || data.length;\n    var offset = data.byteOffset || 0;\n    var buffer = new Buffer(length);\n    for (var i = 0; i < length; i++) {\n        buffer[i] = array[offset + i];\n    }\n    return buffer;\n}\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {Buffer} encoded payload\n * @api private\n */\nconst encodePayloadAsBinary = function (packets, callback) {\n    if (!packets.length) {\n        return callback(new Buffer(0));\n    }\n    map(packets, encodeOneBinaryPacket, function (err, results) {\n        return callback(Buffer.concat(results));\n    });\n};\nfunction encodeOneBinaryPacket(p, doneCallback) {\n    function onBinaryPacketEncode(packet) {\n        var encodingLength = '' + packet.length;\n        var sizeBuffer;\n        if (typeof packet === 'string') {\n            sizeBuffer = new Buffer(encodingLength.length + 2);\n            sizeBuffer[0] = 0; // is a string (not true binary = 0)\n            for (var i = 0; i < encodingLength.length; i++) {\n                sizeBuffer[i + 1] = parseInt(encodingLength[i], 10);\n            }\n            sizeBuffer[sizeBuffer.length - 1] = 255;\n            return doneCallback(null, Buffer.concat([sizeBuffer, stringToBuffer(packet)]));\n        }\n        sizeBuffer = new Buffer(encodingLength.length + 2);\n        sizeBuffer[0] = 1; // is binary (true binary = 1)\n        for (var i = 0; i < encodingLength.length; i++) {\n            sizeBuffer[i + 1] = parseInt(encodingLength[i], 10);\n        }\n        sizeBuffer[sizeBuffer.length - 1] = 255;\n        doneCallback(null, Buffer.concat([sizeBuffer, packet]));\n    }\n    encodePacket(p, true, true, onBinaryPacketEncode);\n}\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n\n * @param {Buffer} data, callback method\n * @api public\n */\nconst decodePayloadAsBinary = function (data, binaryType, callback) {\n    if (typeof binaryType === 'function') {\n        callback = binaryType;\n        binaryType = null;\n    }\n    var bufferTail = typeof data.length === 'undefined' ? new Uint8Array(data) : data;\n    var buffers = [];\n    var i;\n    while (bufferTail.length > 0) {\n        var strLen = '';\n        var isString = bufferTail[0] === 0;\n        for (i = 1;; i++) {\n            if (bufferTail[i] === 255)\n                break;\n            // 310 = char length of Number.MAX_VALUE\n            if (strLen.length > 310) {\n                return callback(err, 0, 1);\n            }\n            strLen += '' + bufferTail[i];\n        }\n        bufferTail = bufferTail.slice(strLen.length + 1);\n        var msgLength = parseInt(strLen, 10);\n        var msg = bufferTail.slice(1, msgLength + 1);\n        buffers.push(isString ? bufferToString(msg) : msg);\n        bufferTail = bufferTail.slice(msgLength + 1);\n    }\n    var total = buffers.length;\n    for (i = 0; i < total; i++) {\n        var buffer = buffers[i];\n        callback(decodePacket(buffer, binaryType, true), i, total);\n    }\n};\nexport default {\n    protocol,\n    packets,\n    encodePacket,\n    encodeBase64Packet,\n    decodePacket,\n    decodeBase64Packet,\n    encodePayload,\n    decodePayload,\n    encodePayloadAsBinary,\n    decodePayloadAsBinary,\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\nfunction Emitter(obj) {\n    if (obj)\n        return mixin(obj);\n}\n;\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\nfunction mixin(obj) {\n    for (var key in Emitter.prototype) {\n        obj[key] = Emitter.prototype[key];\n    }\n    return obj;\n}\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\nEmitter.prototype.on =\n    Emitter.prototype.addEventListener = function (event, fn) {\n        this._callbacks = this._callbacks || {};\n        (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n            .push(fn);\n        return this;\n    };\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\nEmitter.prototype.once = function (event, fn) {\n    function on() {\n        this.off(event, on);\n        fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.on(event, on);\n    return this;\n};\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\nEmitter.prototype.off =\n    Emitter.prototype.removeListener =\n        Emitter.prototype.removeAllListeners =\n            Emitter.prototype.removeEventListener = function (event, fn) {\n                this._callbacks = this._callbacks || {};\n                // all\n                if (0 == arguments.length) {\n                    this._callbacks = {};\n                    return this;\n                }\n                // specific event\n                var callbacks = this._callbacks['$' + event];\n                if (!callbacks)\n                    return this;\n                // remove all handlers\n                if (1 == arguments.length) {\n                    delete this._callbacks['$' + event];\n                    return this;\n                }\n                // remove specific handler\n                var cb;\n                for (var i = 0; i < callbacks.length; i++) {\n                    cb = callbacks[i];\n                    if (cb === fn || cb.fn === fn) {\n                        callbacks.splice(i, 1);\n                        break;\n                    }\n                }\n                // Remove event specific arrays for event types that no\n                // one is subscribed for to avoid memory leak.\n                if (callbacks.length === 0) {\n                    delete this._callbacks['$' + event];\n                }\n                return this;\n            };\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\nEmitter.prototype.emit = function (event) {\n    this._callbacks = this._callbacks || {};\n    var args = new Array(arguments.length - 1), callbacks = this._callbacks['$' + event];\n    for (var i = 1; i < arguments.length; i++) {\n        args[i - 1] = arguments[i];\n    }\n    if (callbacks) {\n        callbacks = callbacks.slice(0);\n        for (var i = 0, len = callbacks.length; i < len; ++i) {\n            callbacks[i].apply(this, args);\n        }\n    }\n    return this;\n};\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\nEmitter.prototype.listeners = function (event) {\n    this._callbacks = this._callbacks || {};\n    return this._callbacks['$' + event] || [];\n};\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\nEmitter.prototype.hasListeners = function (event) {\n    return !!this.listeners(event).length;\n};\n/**\n * Wrap the prototype-based class with a TypeScript class.\n */\nclass TypeScriptEmitter {\n    constructor(obj = null) {\n        this.emitter = Emitter(obj || this);\n    }\n    on(event, fn) {\n        return this.emitter.on(event, fn);\n    }\n    once(event, fn) {\n        return this.emitter.once(event, fn);\n    }\n    removeListener(event, fn) {\n        return this.emitter.removeListener(event, fn);\n    }\n    removeAllListeners(event = undefined, fn = undefined) {\n        return this.emitter.removeAllListeners(event, fn);\n    }\n    emit(event, data = undefined, desc = undefined) {\n        if (typeof desc !== 'undefined') {\n            return this.emitter.emit(event, data, desc);\n        }\n        if (typeof data !== 'undefined') {\n            return this.emitter.emit(event, data);\n        }\n        return this.emitter.emit(event);\n    }\n}\nexport { Emitter as default, TypeScriptEmitter, mixin, };\n","/**\n * Module dependencies.\n */\nimport parser from \"./engine.io-parser\";\nimport Emitter from \"./component-emitter\";\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\nfunction Transport(opts) {\n    this.path = opts.path;\n    this.hostname = opts.hostname;\n    this.port = opts.port;\n    this.secure = opts.secure;\n    this.query = opts.query;\n    this.timestampParam = opts.timestampParam;\n    this.timestampRequests = opts.timestampRequests;\n    this.readyState = '';\n    this.agent = opts.agent || false;\n    this.socket = opts.socket;\n    this.enablesXDR = opts.enablesXDR;\n    // SSL options for Node.js client\n    this.pfx = opts.pfx;\n    this.key = opts.key;\n    this.passphrase = opts.passphrase;\n    this.cert = opts.cert;\n    this.ca = opts.ca;\n    this.ciphers = opts.ciphers;\n    this.rejectUnauthorized = opts.rejectUnauthorized;\n    this.forceNode = opts.forceNode;\n    // results of ReactNative environment detection\n    this.isReactNative = opts.isReactNative;\n    // other options for Node.js client\n    this.extraHeaders = opts.extraHeaders;\n    this.localAddress = opts.localAddress;\n}\n/**\n * Mix in `Emitter`.\n */\nEmitter(Transport.prototype);\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\nTransport.prototype.onError = function (msg, desc) {\n    var err = new Error(msg);\n    err.type = 'TransportError';\n    err.description = desc;\n    this.emit('error', err);\n    return this;\n};\n/**\n * Opens the transport.\n *\n * @api public\n */\nTransport.prototype.open = function () {\n    if ('closed' === this.readyState || '' === this.readyState) {\n        this.readyState = 'opening';\n        this.doOpen();\n    }\n    return this;\n};\n/**\n * Closes the transport.\n *\n * @api private\n */\nTransport.prototype.close = function () {\n    if ('opening' === this.readyState || 'open' === this.readyState) {\n        this.doClose();\n        this.onClose();\n    }\n    return this;\n};\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\nTransport.prototype.send = function (packets) {\n    if ('open' === this.readyState) {\n        this.write(packets);\n    }\n    else {\n        throw new Error('Transport not open');\n    }\n};\n/**\n * Called upon open\n *\n * @api private\n */\nTransport.prototype.onOpen = function () {\n    this.readyState = 'open';\n    this.writable = true;\n    this.emit('open');\n};\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\nTransport.prototype.onData = function (data) {\n    var packet = parser.decodePacket(data, this.socket.binaryType);\n    this.onPacket(packet);\n};\n/**\n * Called with a decoded packet.\n */\nTransport.prototype.onPacket = function (packet) {\n    this.emit('packet', packet);\n};\n/**\n * Called with out of band data.\n */\nTransport.prototype.outOfBand = function (data) {\n    this.emit('outOfBand', data);\n};\n/**\n * Called upon close.\n *\n * @api private\n */\nTransport.prototype.onClose = function () {\n    this.readyState = 'closed';\n    this.emit('close');\n};\nexport { Transport, };\n","export default function (a, b) {\n    var fn = function () { };\n    fn.prototype = b.prototype;\n    a.prototype = new fn;\n    a.prototype.constructor = a;\n}\n;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","/**\n * Module dependencies.\n */\nimport { Transport } from \"../transport\";\nimport parseqs from \"parseqs\";\nimport parser from \"../engine.io-parser\";\nimport inherit from '../component-inherit';\nimport yeast from \"yeast\";\nimport debugModule from 'debug';\nvar debug = debugModule(\"engine.io-client:polling\");\n/**\n * Is XHR2 supported?\n */\n//var XMLHttpRequest = require('xmlhttprequest-ssl');\nimport XMLHttpRequest from \"../xmlhttprequest\";\nvar hasXHR2 = (function () {\n    var xhr = XMLHttpRequest({ xdomain: false });\n    return null != xhr.responseType;\n})();\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\nfunction Polling(opts) {\n    var forceBase64 = (opts && opts.forceBase64);\n    if (!hasXHR2 || forceBase64) {\n        this.supportsBinary = false;\n    }\n    Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\ninherit(Polling, Transport);\n/**\n * Transport name.\n */\nPolling.prototype.name = 'polling';\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\nPolling.prototype.doOpen = function () {\n    this.poll();\n};\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\nPolling.prototype.pause = function (onPause) {\n    var self = this;\n    this.readyState = 'pausing';\n    function pause() {\n        debug('paused');\n        self.readyState = 'paused';\n        onPause();\n    }\n    if (this.polling || !this.writable) {\n        var total = 0;\n        if (this.polling) {\n            debug('we are currently polling - waiting to pause');\n            total++;\n            this.once('pollComplete', function () {\n                debug('pre-pause polling complete');\n                --total || pause();\n            });\n        }\n        if (!this.writable) {\n            debug('we are currently writing - waiting to pause');\n            total++;\n            this.once('drain', function () {\n                debug('pre-pause writing complete');\n                --total || pause();\n            });\n        }\n    }\n    else {\n        pause();\n    }\n};\n/**\n * Starts polling cycle.\n *\n * @api public\n */\nPolling.prototype.poll = function () {\n    debug('polling');\n    this.polling = true;\n    this.doPoll();\n    this.emit('poll');\n};\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\nPolling.prototype.onData = function (data) {\n    var self = this;\n    debug('polling got data %s', data);\n    var callback = function (packet, index, total) {\n        // if its the first message we consider the transport open\n        if ('opening' === self.readyState) {\n            self.onOpen();\n        }\n        // if its a close packet, we close the ongoing requests\n        if ('close' === packet.type) {\n            self.onClose();\n            return false;\n        }\n        // otherwise bypass onData and handle the message\n        self.onPacket(packet);\n    };\n    // decode payload\n    self.decodePayload(data, this.socket.binaryType, callback);\n    // if an event did not trigger closing\n    if ('closed' !== this.readyState) {\n        // if we got data we're not polling\n        this.polling = false;\n        this.emit('pollComplete');\n        if ('open' === this.readyState) {\n            this.poll();\n        }\n        else {\n            debug('ignoring poll - transport state \"%s\"', this.readyState);\n        }\n    }\n};\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\nPolling.prototype.doClose = function () {\n    var self = this;\n    function close() {\n        debug('writing close packet');\n        self.write([{ type: 'close' }]);\n    }\n    if ('open' === this.readyState) {\n        debug('transport open - closing');\n        close();\n    }\n    else {\n        // in case we're trying to close while\n        // handshaking is in progress (GH-164)\n        debug('transport not open - deferring close');\n        this.once('open', close);\n    }\n};\n/**\n * Removes out of band data and decodes the clean payload.\n *\n * @param {Array} data packets\n * @param {Object} typ type\n * @param {Function} callback parser callback\n * @api private\n */\nPolling.prototype.decodePayload = function (data, binaryType, callback) {\n    var self = this;\n    var cleanData = '';\n    var outOfBand = '';\n    var matchPos = [];\n    if (typeof data === 'string') {\n        data = data.substring(data.startsWith('ok') ? 2 : 0);\n        // find packets\n        var pos = data.indexOf(':');\n        while (pos !== -1) {\n            if ((pos > 0) && (pos < (data.length - 1))\n                && (data[pos - 1] >= '0') && (data[pos - 1] <= '9')\n                && (data[pos + 1] >= '0') && (data[pos + 1] <= '9')) {\n                matchPos.push(pos);\n            }\n            pos = data.indexOf(':', pos + 1);\n        }\n        // separate packets from out of band data\n        var prev = 0;\n        var start = 0;\n        var end = 0;\n        var del = 0;\n        var len = 0;\n        var heur = 0;\n        for (var m = 0; m < matchPos.length; ++m) {\n            start = matchPos[m] - del - 1;\n            end = start + 1;\n            while ((start >= 0) && (data[start] >= '0') && (data[start] <= '9')) {\n                len = parseInt(data.substring(start, end));\n                // heuristic to ignore extra outOfBand digit\n                heur = data.length;\n                if ((m + 1) < matchPos.length) {\n                    heur = matchPos[m + 1] - del - 1;\n                }\n                if ((end + len) >= heur) {\n                    break;\n                }\n                --start;\n            }\n            ++start;\n            if ((start >= 2) && (data.substring(start - 2, start) === 'ok')) {\n                data = data.substring(0, start - 2) + data.substring(start);\n                del += 2;\n                start -= 2;\n            }\n            end = matchPos[m] - del;\n            len = parseInt(data.substring(start, end));\n            cleanData += data.substring(start, end + len + 1);\n            outOfBand += data.substring(prev, start);\n            prev = end + len + 1;\n        }\n        if (prev < data.length) {\n            outOfBand += data.substring(prev);\n        }\n        // decode packets\n        if (cleanData) {\n            parser.decodePayload(cleanData, binaryType, callback);\n        }\n        if (outOfBand) {\n            self.outOfBand(outOfBand);\n        }\n    }\n    else if (data) {\n        parser.decodePayload(data, binaryType, callback);\n    }\n};\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\nPolling.prototype.write = function (packets) {\n    var self = this;\n    this.writable = false;\n    var callback = function (packet, index, total) {\n        // handle the message\n        self.onPacket(packet);\n    };\n    var callbackfn = function (data) {\n        self.decodePayload(data, self.socket.binaryType, callback);\n        self.writable = true;\n        self.emit('drain');\n    };\n    parser.encodePayload(packets, this.supportsBinary, function (data) {\n        self.doWrite(data, callbackfn);\n    });\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\nPolling.prototype.uri = function () {\n    var query = this.query || {};\n    var schema = this.secure ? 'https' : 'http';\n    var port = '';\n    var path = (typeof this.path === 'function') ? this.path() : this.path;\n    // cache busting is forced\n    if (false !== this.timestampRequests) {\n        query[this.timestampParam] = yeast();\n    }\n    if (!this.supportsBinary && !query.sid) {\n        query.b64 = 1;\n    }\n    query = parseqs.encode(query);\n    // avoid port if default for schema\n    if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n        ('http' === schema && Number(this.port) !== 80))) {\n        port = ':' + this.port;\n    }\n    // prepend ? to query\n    if (query.length) {\n        query = '?' + query;\n    }\n    var ipv6 = this.hostname.indexOf(':') !== -1;\n    return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + path + query;\n};\nexport { Polling as default, };\n","/* global attachEvent */\n/**\n * Module requirements.\n */\n//import XMLHttpRequest from \"xmlhttprequest-ssl\";\nimport XMLHttpRequest from \"../xmlhttprequest\";\nimport Polling from \"./polling\";\nimport Emitter from \"../component-emitter\";\nimport inherit from '../component-inherit';\nimport debugModule from 'debug';\nvar debug = debugModule(\"engine.io-client:polling-xhr\");\n/**\n * Empty function\n */\nfunction empty() { }\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\nfunction XHR(opts) {\n    Polling.call(this, opts);\n    this.requestTimeout = opts.requestTimeout;\n    this.extraHeaders = opts.extraHeaders;\n    if (typeof location !== 'undefined') {\n        var isSSL = 'https:' === location.protocol;\n        var port = location.port;\n        // some user agents have empty `location.port`\n        if (!port) {\n            port = isSSL ? 443 : 80;\n        }\n        this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\n            port !== opts.port;\n        this.xs = opts.secure !== isSSL;\n    }\n}\n/**\n * Inherits from Polling.\n */\ninherit(XHR, Polling);\n/**\n * XHR supports binary\n */\nXHR.prototype.supportsBinary = true;\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\nXHR.prototype.request = function (opts) {\n    opts = opts || {};\n    opts.uri = this.uri();\n    opts.xd = this.xd;\n    opts.xs = this.xs;\n    opts.agent = this.agent || false;\n    opts.supportsBinary = this.supportsBinary;\n    opts.enablesXDR = this.enablesXDR;\n    // SSL options for Node.js client\n    opts.pfx = this.pfx;\n    opts.key = this.key;\n    opts.passphrase = this.passphrase;\n    opts.cert = this.cert;\n    opts.ca = this.ca;\n    opts.ciphers = this.ciphers;\n    opts.rejectUnauthorized = this.rejectUnauthorized;\n    opts.requestTimeout = this.requestTimeout;\n    // other options for Node.js client\n    opts.extraHeaders = this.extraHeaders;\n    return new Request(opts);\n};\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\nXHR.prototype.doWrite = function (data, fn) {\n    var isBinary = typeof data !== 'string' && data !== undefined;\n    var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n    var self = this;\n    req.on('data', fn);\n    req.on('error', function (err) {\n        self.onError('xhr post error', err);\n    });\n    this.sendXhr = req;\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\nXHR.prototype.doPoll = function () {\n    debug('xhr poll');\n    var req = this.request();\n    var self = this;\n    req.on('data', function (data) {\n        self.onData(data);\n    });\n    req.on('error', function (err) {\n        self.onError('xhr poll error', err);\n    });\n    this.pollXhr = req;\n};\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\nfunction Request(opts) {\n    this.method = opts.method || 'GET';\n    this.uri = opts.uri;\n    this.xd = !!opts.xd;\n    this.xs = !!opts.xs;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n    this.agent = opts.agent;\n    this.isBinary = opts.isBinary;\n    this.supportsBinary = opts.supportsBinary;\n    this.enablesXDR = opts.enablesXDR;\n    this.requestTimeout = opts.requestTimeout;\n    // SSL options for Node.js client\n    this.pfx = opts.pfx;\n    this.key = opts.key;\n    this.passphrase = opts.passphrase;\n    this.cert = opts.cert;\n    this.ca = opts.ca;\n    this.ciphers = opts.ciphers;\n    this.rejectUnauthorized = opts.rejectUnauthorized;\n    // other options for Node.js client\n    this.extraHeaders = opts.extraHeaders;\n    this.create();\n}\n/**\n * Mix in `Emitter`.\n */\nEmitter(Request.prototype);\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\nRequest.prototype.create = function () {\n    var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n    // SSL options for Node.js client\n    opts.pfx = this.pfx;\n    opts.key = this.key;\n    opts.passphrase = this.passphrase;\n    opts.cert = this.cert;\n    opts.ca = this.ca;\n    opts.ciphers = this.ciphers;\n    opts.rejectUnauthorized = this.rejectUnauthorized;\n    var xhr = this.xhr = XMLHttpRequest(opts);\n    var self = this;\n    try {\n        debug('xhr open %s: %s', this.method, this.uri);\n        xhr.open(this.method, this.uri, this.async);\n        try {\n            if (this.extraHeaders) {\n                xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                for (var i in this.extraHeaders) {\n                    if (this.extraHeaders.hasOwnProperty(i)) {\n                        xhr.setRequestHeader(i, this.extraHeaders[i]);\n                    }\n                }\n            }\n        }\n        catch (e) { }\n        if ('POST' === this.method) {\n            try {\n                if (this.isBinary) {\n                    xhr.setRequestHeader('Content-type', 'application/octet-stream');\n                }\n                else {\n                    xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n                }\n            }\n            catch (e) { }\n        }\n        try {\n            xhr.setRequestHeader('Accept', '*/*');\n        }\n        catch (e) { }\n        // ie6 check\n        if ('withCredentials' in xhr) {\n            xhr.withCredentials = true;\n        }\n        if (this.requestTimeout) {\n            xhr.timeout = this.requestTimeout;\n        }\n        if (this.hasXDR()) {\n            xhr.onload = function () {\n                self.onLoad();\n            };\n            xhr.onerror = function () {\n                self.onError(xhr.responseText);\n            };\n        }\n        else {\n            xhr.onreadystatechange = function () {\n                if (xhr.readyState === 2) {\n                    try {\n                        var contentType = xhr.getResponseHeader('Content-Type');\n                        if (self.supportsBinary && contentType === 'application/octet-stream') {\n                            xhr.responseType = 'arraybuffer';\n                        }\n                    }\n                    catch (e) { }\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    self.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    setTimeout(function () {\n                        self.onError(xhr.status);\n                    }, 0);\n                }\n            };\n        }\n        debug('xhr data %s', this.data);\n        xhr.send(this.data);\n    }\n    catch (e) {\n        // Need to defer since .create() is called directly fhrom the constructor\n        // and thus the 'error' event can only be only bound *after* this exception\n        // occurs.  Therefore, also, we cannot throw here at all.\n        setTimeout(function () {\n            self.onError(e);\n        }, 0);\n        return;\n    }\n    if (typeof document !== 'undefined') {\n        this.index = Request.requestsCount++;\n        Request.requests[this.index] = this;\n    }\n};\n/**\n * Called upon successful response.\n *\n * @api private\n */\nRequest.prototype.onSuccess = function () {\n    this.emit('success');\n    this.cleanup();\n};\n/**\n * Called if we have data.\n *\n * @api private\n */\nRequest.prototype.onData = function (data) {\n    this.emit('data', data);\n    this.onSuccess();\n};\n/**\n * Called upon error.\n *\n * @api private\n */\nRequest.prototype.onError = function (err) {\n    this.emit('error', err);\n    this.cleanup(true);\n};\n/**\n * Cleans up house.\n *\n * @api private\n */\nRequest.prototype.cleanup = function (fromError) {\n    if ('undefined' === typeof this.xhr || null === this.xhr) {\n        return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n        this.xhr.onload = this.xhr.onerror = empty;\n    }\n    else {\n        this.xhr.onreadystatechange = empty;\n    }\n    if (fromError) {\n        try {\n            this.xhr.abort();\n        }\n        catch (e) { }\n    }\n    if (typeof document !== 'undefined') {\n        delete Request.requests[this.index];\n    }\n    this.xhr = null;\n};\n/**\n * Called upon load.\n *\n * @api private\n */\nRequest.prototype.onLoad = function () {\n    var data;\n    try {\n        var contentType;\n        try {\n            contentType = this.xhr.getResponseHeader('Content-Type');\n        }\n        catch (e) { }\n        if (contentType === 'application/octet-stream') {\n            data = this.xhr.response || this.xhr.responseText;\n        }\n        else {\n            data = this.xhr.responseText;\n        }\n    }\n    catch (e) {\n        this.onError(e);\n    }\n    if (null != data) {\n        this.onData(data);\n    }\n};\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\nRequest.prototype.hasXDR = function () {\n    return false; //typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n/**\n * Aborts the request.\n *\n * @api public\n */\nRequest.prototype.abort = function () {\n    this.cleanup();\n};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nRequest.requestsCount = 0;\nRequest.requests = {};\nif (typeof document !== 'undefined') {\n    /*if (typeof attachEvent === 'function') {\n      attachEvent('onunload', unloadHandler);\n    } else */ if (typeof addEventListener === 'function') {\n        var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (var i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            var obj = Request.requests[i];\n            if (typeof obj !== 'undefined') {\n                if (typeof obj.abort !== 'undefined') {\n                    obj.abort();\n                }\n            }\n        }\n    }\n}\nexport { XHR as default, Request, };\n","/**\n * Module requirements.\n */\nimport Polling from \"./polling\";\nimport inherit from '../component-inherit';\n/**\n * Cached regular expressions.\n */\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n/**\n * Global JSONP callbacks.\n */\nvar callbacks;\n/**\n * Noop.\n */\nfunction empty() { }\n/**\n * Until https://github.com/tc39/proposal-global is shipped.\n */\nfunction glob() {\n    return typeof self !== 'undefined' ? self\n        : typeof window !== 'undefined' ? window\n            : typeof global !== 'undefined' ? global : {};\n}\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\nfunction JSONPPolling(opts) {\n    Polling.call(this, opts);\n    this.query = this.query || {};\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    /*\n      if (!callbacks) {\n        // we need to consider multiple engines in the same page\n        var global = glob();\n        callbacks = global.___eio = (global.___eio || []);\n      }\n    */\n    // callback identifier\n    this.index = callbacks.length;\n    // add callback to jsonp global\n    var self = this;\n    callbacks.push(function (msg) {\n        self.onData(msg);\n    });\n    // append to query string\n    this.query.j = this.index;\n    // prevent spurious errors from being emitted when the window is unloaded\n    if (typeof addEventListener === 'function') {\n        addEventListener('beforeunload', function () {\n            if (self.script)\n                self.script.onerror = empty;\n        }, false);\n    }\n}\n/**\n * Inherits from Polling.\n */\ninherit(JSONPPolling, Polling);\n/*\n * JSONP only supports binary as base64 encoded strings\n */\nJSONPPolling.prototype.supportsBinary = false;\n/**\n * Closes the socket.\n *\n * @api private\n */\nJSONPPolling.prototype.doClose = function () {\n    if (this.script) {\n        this.script.parentNode.removeChild(this.script);\n        this.script = null;\n    }\n    if (this.form) {\n        this.form.parentNode.removeChild(this.form);\n        this.form = null;\n        this.iframe = null;\n    }\n    Polling.prototype.doClose.call(this);\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\nJSONPPolling.prototype.doPoll = function () {\n    var self = this;\n    var script = document.createElement('script');\n    if (this.script) {\n        this.script.parentNode.removeChild(this.script);\n        this.script = null;\n    }\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = function (e) {\n        self.onError('jsonp poll error', e);\n    };\n    var insertAt = document.getElementsByTagName('script')[0];\n    if (insertAt) {\n        insertAt.parentNode.insertBefore(script, insertAt);\n    }\n    else {\n        (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n    var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n    if (isUAgecko) {\n        setTimeout(function () {\n            var iframe = document.createElement('iframe');\n            document.body.appendChild(iframe);\n            document.body.removeChild(iframe);\n        }, 100);\n    }\n};\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\nJSONPPolling.prototype.doWrite = function (data, fn) {\n    var self = this;\n    if (!this.form) {\n        var form = document.createElement('form');\n        var area = document.createElement('textarea');\n        var id = this.iframeId = 'eio_iframe_' + this.index;\n        var iframe;\n        form.className = 'socketio';\n        form.style.position = 'absolute';\n        form.style.top = '-1000px';\n        form.style.left = '-1000px';\n        form.target = id;\n        form.method = 'POST';\n        form.setAttribute('accept-charset', 'utf-8');\n        area.name = 'd';\n        form.appendChild(area);\n        document.body.appendChild(form);\n        this.form = form;\n        this.area = area;\n    }\n    this.form.action = this.uri();\n    function complete() {\n        initIframe();\n        fn();\n    }\n    function initIframe() {\n        if (self.iframe) {\n            try {\n                self.form.removeChild(self.iframe);\n            }\n            catch (e) {\n                self.onError('jsonp polling iframe removal error', e);\n            }\n        }\n        try {\n            // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n            var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n            iframe = document.createElement(html);\n        }\n        catch (e) {\n            iframe = document.createElement('iframe');\n            iframe.name = self.iframeId;\n            iframe.src = 'javascript:0';\n        }\n        iframe.id = self.iframeId;\n        self.form.appendChild(iframe);\n        self.iframe = iframe;\n    }\n    initIframe();\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, '\\\\\\n');\n    this.area.value = data.replace(rNewline, '\\\\n');\n    try {\n        this.form.submit();\n    }\n    catch (e) { }\n    if (this.iframe.attachEvent) {\n        this.iframe.onreadystatechange = function () {\n            if (self.iframe.readyState === 'complete') {\n                complete();\n            }\n        };\n    }\n    else {\n        this.iframe.onload = complete;\n    }\n};\nexport { JSONPPolling, };\n","/**\n * Module dependencies.\n */\nimport { Transport } from \"../transport\";\nimport { encodePacket, encodePayload, decodePacket, decodePayload } from \".,/../engine.io-parser\";\nconst parser = { encodePacket, encodePayload, decodePacket, decodePayload };\nimport parseqs from \"parseqs\";\nimport inherit from '../component-inherit';\nimport yeast from \"yeast\";\nimport debugModule from 'debug';\nvar debug = debugModule(\"engine.io-client:websocket\");\nvar BrowserWebSocket, NodeWebSocket;\nif (typeof WebSocket !== 'undefined') {\n    BrowserWebSocket = WebSocket;\n}\nelse if (typeof self !== 'undefined') {\n    BrowserWebSocket = self.WebSocket; // || self.MozWebSocket;\n}\nelse {\n    try {\n        NodeWebSocket = require('ws');\n    }\n    catch (e) { }\n}\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\nfunction WS(opts) {\n    var forceBase64 = (opts && opts.forceBase64);\n    if (forceBase64) {\n        this.supportsBinary = false;\n    }\n    this.perMessageDeflate = opts.perMessageDeflate;\n    this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n    this.protocols = opts.protocols;\n    if (!this.usingBrowserWebSocket) {\n        WebSocketImpl = NodeWebSocket;\n    }\n    Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\ninherit(WS, Transport);\n/**\n * Transport name.\n *\n * @api public\n */\nWS.prototype.name = 'websocket';\n/*\n * WebSockets support binary\n */\nWS.prototype.supportsBinary = true;\n/**\n * Opens socket.\n *\n * @api private\n */\nWS.prototype.doOpen = function () {\n    if (!this.check()) {\n        // let probe timeout\n        return;\n    }\n    var uri = this.uri();\n    var protocols = this.protocols;\n    var opts = {\n        agent: this.agent,\n        perMessageDeflate: this.perMessageDeflate\n    };\n    // SSL options for Node.js client\n    opts.pfx = this.pfx;\n    opts.key = this.key;\n    opts.passphrase = this.passphrase;\n    opts.cert = this.cert;\n    opts.ca = this.ca;\n    opts.ciphers = this.ciphers;\n    opts.rejectUnauthorized = this.rejectUnauthorized;\n    if (this.extraHeaders) {\n        opts.headers = this.extraHeaders;\n    }\n    if (this.localAddress) {\n        opts.localAddress = this.localAddress;\n    }\n    try {\n        this.ws =\n            this.usingBrowserWebSocket && !this.isReactNative\n                ? protocols\n                    ? new WebSocketImpl(uri, protocols)\n                    : new WebSocketImpl(uri)\n                : new WebSocketImpl(uri, protocols, opts);\n    }\n    catch (err) {\n        return this.emit('error', err);\n    }\n    if (this.ws.binaryType === undefined) {\n        this.supportsBinary = false;\n    }\n    if (this.ws.supports && this.ws.supports.binary) {\n        this.supportsBinary = true;\n        this.ws.binaryType = 'nodebuffer';\n    }\n    else {\n        this.ws.binaryType = 'arraybuffer';\n    }\n    this.addEventListeners();\n};\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\nWS.prototype.addEventListeners = function () {\n    var self = this;\n    this.ws.onopen = function () {\n        self.onOpen();\n    };\n    this.ws.onclose = function () {\n        self.onClose();\n    };\n    this.ws.onmessage = function (ev) {\n        self.onData(ev.data);\n    };\n    this.ws.onerror = function (e) {\n        self.onError('websocket error', e);\n    };\n};\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\nWS.prototype.write = function (packets) {\n    var self = this;\n    this.writable = false;\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    var total = packets.length;\n    for (var i = 0, l = total; i < l; i++) {\n        (function (packet) {\n            parser.encodePacket(packet, self.supportsBinary, function (data) {\n                if (!self.usingBrowserWebSocket) {\n                    // always create a new object (GH-437)\n                    var opts = {};\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (self.perMessageDeflate) {\n                        var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < self.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (self.usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        self.ws.send(data);\n                    }\n                    else {\n                        self.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                    debug('websocket closed before onclose event');\n                }\n                --total || done();\n            });\n        })(packets[i]);\n    }\n    function done() {\n        self.emit('flush');\n        // fake drain\n        // defer to next tick to allow Socket to clear writeBuffer\n        setTimeout(function () {\n            self.writable = true;\n            self.emit('drain');\n        }, 0);\n    }\n};\n/**\n * Called upon close\n *\n * @api private\n */\nWS.prototype.onClose = function () {\n    Transport.prototype.onClose.call(this);\n};\n/**\n * Closes socket.\n *\n * @api private\n */\nWS.prototype.doClose = function () {\n    if (typeof this.ws !== 'undefined') {\n        this.ws.close();\n    }\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\nWS.prototype.uri = function () {\n    var query = this.query || {};\n    var schema = this.secure ? 'wss' : 'ws';\n    var port = '';\n    var path = (typeof this.path === 'function') ? this.path() : this.path;\n    // avoid port if default for schema\n    if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n        ('ws' === schema && Number(this.port) !== 80))) {\n        port = ':' + this.port;\n    }\n    // append timestamp to URI\n    if (this.timestampRequests) {\n        query[this.timestampParam] = yeast();\n    }\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n        query.b64 = 1;\n    }\n    query = parseqs.encode(query);\n    // prepend ? to query\n    if (query.length) {\n        query = '?' + query;\n    }\n    var ipv6 = this.hostname.indexOf(':') !== -1;\n    return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + path + query;\n};\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\nWS.prototype.check = function () {\n    return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};\nexport { WS, };\n","/**\n * Module dependencies\n */\n//import XMLHttpRequest from \"xmlhttprequest-ssl\";\nimport XMLHttpRequest from \"../xmlhttprequest\";\nimport XHR from \"./polling-xhr\";\nimport { JSONPPolling as JSONP } from \"./polling-jsonp\";\nimport { WS as websocket } from \"./websocket\";\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\nfunction polling(opts) {\n    var xhr;\n    var xd = false;\n    var xs = false;\n    var jsonp = false !== opts.jsonp;\n    if (typeof location !== 'undefined') {\n        var isSSL = 'https:' === location.protocol;\n        var port = parseInt(location.port);\n        // some user agents have empty `location.port`\n        if (!port) {\n            port = isSSL ? 443 : 80;\n        }\n        xd = opts.hostname !== location.hostname || port !== opts.port;\n        xs = opts.secure !== isSSL;\n    }\n    opts.xdomain = xd;\n    opts.xscheme = xs;\n    xhr = XMLHttpRequest(opts);\n    if ('open' in xhr && !opts.forceJSONP) {\n        return new XHR(opts);\n    }\n    else {\n        if (!jsonp)\n            throw new Error('JSONP disabled');\n        return new JSONP(opts);\n    }\n}\nexport default {\n    polling,\n    websocket,\n};\n","/**\n * Module dependencies.\n */\nimport transports from \"./transports/index.js\";\nimport Emitter from \"./component-emitter\";\nimport debugModule from 'debug';\nvar debug = debugModule(\"engine.io-client:socket\");\nimport parser from \"./engine.io-parser\";\nimport parseuri from \"parseuri\";\nimport parseqs from \"parseqs\";\nimport { Transport } from \"./transport\";\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\nfunction Socket(uri, opts) {\n    //  if (!(this instanceof Socket)) return new Socket(uri, opts);\n    opts = opts || {};\n    this.outOfBand = opts.outOfBand || function () { };\n    if (uri && 'object' === typeof uri) {\n        opts = uri;\n        uri = null;\n    }\n    if (uri) {\n        uri = parseuri(uri);\n        opts.hostname = uri.host;\n        opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n        opts.port = uri.port;\n        if (uri.query)\n            opts.query = uri.query;\n    }\n    else if (opts.host) {\n        opts.hostname = parseuri(opts.host).host;\n    }\n    this.secure = null != opts.secure ? opts.secure\n        : (typeof location !== 'undefined' && 'https:' === location.protocol);\n    if (opts.hostname && !opts.port) {\n        // if no port is specified manually, use the protocol default\n        opts.port = this.secure ? '443' : '80';\n    }\n    this.agent = opts.agent || false;\n    this.hostname = opts.hostname ||\n        (typeof location !== 'undefined' ? location.hostname : 'localhost');\n    this.port = opts.port || (typeof location !== 'undefined' && location.port\n        ? location.port\n        : (this.secure ? 443 : 80));\n    this.query = opts.query || {};\n    if ('string' === typeof this.query)\n        this.query = parseqs.decode(this.query);\n    this.upgrade = false !== opts.upgrade;\n    this.path = (opts.path || '/engine.io');\n    if ('string' === typeof this.path)\n        this.path = this.path.replace(/\\/$/, '') + '/';\n    this.forceJSONP = !!opts.forceJSONP;\n    this.jsonp = false !== opts.jsonp;\n    this.forceBase64 = !!opts.forceBase64;\n    this.enablesXDR = !!opts.enablesXDR;\n    this.timestampParam = opts.timestampParam || 't';\n    this.timestampRequests = opts.timestampRequests;\n    this.transports = opts.transports || ['polling', 'websocket'];\n    this.transportOptions = opts.transportOptions || {};\n    this.readyState = '';\n    this.writeBuffer = [];\n    this.prevBufferLen = 0;\n    this.policyPort = opts.policyPort || 843;\n    this.rememberUpgrade = opts.rememberUpgrade || false;\n    this.binaryType = null;\n    this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n    this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n    if (true === this.perMessageDeflate)\n        this.perMessageDeflate = {};\n    if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n        this.perMessageDeflate.threshold = 1024;\n    }\n    // SSL options for Node.js client\n    this.pfx = opts.pfx || null;\n    this.key = opts.key || null;\n    this.passphrase = opts.passphrase || null;\n    this.cert = opts.cert || null;\n    this.ca = opts.ca || null;\n    this.ciphers = opts.ciphers || null;\n    this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n    this.forceNode = !!opts.forceNode;\n    // detect ReactNative environment\n    this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');\n    // other options for Node.js or ReactNative client\n    if (typeof self === 'undefined' || this.isReactNative) {\n        if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n            this.extraHeaders = opts.extraHeaders;\n        }\n        if (opts.localAddress) {\n            this.localAddress = opts.localAddress;\n        }\n    }\n    // set on handshake\n    this.id = null;\n    this.upgrades = null;\n    this.pingInterval = null;\n    this.pingTimeout = null;\n    // set on heartbeat\n    this.pingIntervalTimer = null;\n    this.pingTimeoutTimer = null;\n    this.open();\n}\nSocket.priorWebsocketSuccess = false;\n/**\n * Mix in `Emitter`.\n */\nEmitter(Socket.prototype);\n/**\n * Protocol version.\n *\n * @api public\n */\nSocket.protocol = parser.protocol; // this is an int\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\nSocket.Socket = Socket;\nSocket.Transport = Transport;\nSocket.transports = transports;\nSocket.parser = parser;\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\nSocket.prototype.createTransport = function (name) {\n    var query = clone(this.query);\n    // append engine.io protocol identifier\n    query.EIO = parser.protocol;\n    // transport name\n    query.transport = name;\n    // per-transport options\n    var options = this.transportOptions[name] || {};\n    // session id if we already have one\n    if (this.id)\n        query.sid = this.id;\n    var transport = new transports[name]({\n        query: query,\n        socket: this,\n        agent: options.agent || this.agent,\n        hostname: options.hostname || this.hostname,\n        port: options.port || this.port,\n        secure: options.secure || this.secure,\n        path: options.path || this.path,\n        forceJSONP: options.forceJSONP || this.forceJSONP,\n        jsonp: options.jsonp || this.jsonp,\n        forceBase64: options.forceBase64 || this.forceBase64,\n        enablesXDR: options.enablesXDR || this.enablesXDR,\n        timestampRequests: options.timestampRequests || this.timestampRequests,\n        timestampParam: options.timestampParam || this.timestampParam,\n        policyPort: options.policyPort || this.policyPort,\n        pfx: options.pfx || this.pfx,\n        key: options.key || this.key,\n        passphrase: options.passphrase || this.passphrase,\n        cert: options.cert || this.cert,\n        ca: options.ca || this.ca,\n        ciphers: options.ciphers || this.ciphers,\n        rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n        perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n        extraHeaders: options.extraHeaders || this.extraHeaders,\n        forceNode: options.forceNode || this.forceNode,\n        localAddress: options.localAddress || this.localAddress,\n        requestTimeout: options.requestTimeout || this.requestTimeout,\n        protocols: options.protocols || void (0),\n        isReactNative: this.isReactNative\n    });\n    return transport;\n};\nfunction clone(obj) {\n    var o = {};\n    for (var i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n    var transport;\n    if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n        transport = 'websocket';\n    }\n    else if (0 === this.transports.length) {\n        // Emit error on next tick so it can be listened to\n        var self = this;\n        setTimeout(function () {\n            self.emit('error', 'No transports available');\n        }, 0);\n        return;\n    }\n    else {\n        transport = this.transports[0];\n    }\n    this.readyState = 'opening';\n    // Retry with the next transport if the transport is disabled (jsonp: false)\n    try {\n        transport = this.createTransport(transport);\n    }\n    catch (e) {\n        this.transports.shift();\n        this.open();\n        return;\n    }\n    transport.open();\n    this.setTransport(transport);\n};\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\nSocket.prototype.setTransport = function (transport) {\n    var self = this;\n    if (this.transport) {\n        this.transport.removeAllListeners();\n    }\n    // set up transport\n    this.transport = transport;\n    // set up transport listeners\n    transport\n        .on('outOfBand', function (data) {\n        self.onOutOfBand(data);\n    })\n        .on('drain', function () {\n        self.onDrain();\n    })\n        .on('packet', function (packet) {\n        self.onPacket(packet);\n    })\n        .on('error', function (e) {\n        self.onError(e);\n    })\n        .on('close', function () {\n        self.onClose('transport close');\n    });\n};\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\nSocket.prototype.probe = function (name) {\n    var transport = this.createTransport(name, { probe: 1 });\n    var failed = false;\n    var self = this;\n    Socket.priorWebsocketSuccess = false;\n    function onTransportOpen() {\n        if (self.onlyBinaryUpgrades) {\n            var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n            failed = failed || upgradeLosesBinary;\n        }\n        if (failed)\n            return;\n        transport.send([{ type: 'ping', data: 'probe' }]);\n        transport.once('packet', function (msg) {\n            if (failed)\n                return;\n            if ('pong' === msg.type && 'probe' === msg.data) {\n                self.upgrading = true;\n                self.emit('upgrading', transport);\n                if (!transport)\n                    return;\n                Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n                self.transport.pause(function () {\n                    if (failed)\n                        return;\n                    if ('closed' === self.readyState)\n                        return;\n                    cleanup();\n                    self.setTransport(transport);\n                    transport.send([{ type: 'upgrade' }]);\n                    self.emit('upgrade', transport);\n                    transport = null;\n                    self.upgrading = false;\n                    self.flush();\n                });\n            }\n            else {\n                var err = new Error('probe error');\n                err.transport = transport.name;\n                self.emit('upgradeError', err);\n            }\n        });\n    }\n    function freezeTransport() {\n        if (failed)\n            return;\n        // Any callback called by transport should be ignored since now\n        failed = true;\n        cleanup();\n        transport.close();\n        transport = null;\n    }\n    // Handle any error that happens while probing\n    function onerror(err) {\n        var error = new Error('probe error: ' + err);\n        error.transport = transport.name;\n        freezeTransport();\n        self.emit('upgradeError', error);\n    }\n    function onTransportClose() {\n        onerror('transport closed');\n    }\n    // When the socket is closed while we're probing\n    function onclose() {\n        onerror('socket closed');\n    }\n    // When the socket is upgraded while we're probing\n    function onupgrade(to) {\n        if (transport && to.name !== transport.name) {\n            freezeTransport();\n        }\n    }\n    // Remove all listeners on the transport and on self\n    function cleanup() {\n        transport.removeListener('open', onTransportOpen);\n        transport.removeListener('error', onerror);\n        transport.removeListener('close', onTransportClose);\n        self.removeListener('close', onclose);\n        self.removeListener('upgrading', onupgrade);\n    }\n    transport.once('open', onTransportOpen);\n    transport.once('error', onerror);\n    transport.once('close', onTransportClose);\n    this.once('close', onclose);\n    this.once('upgrading', onupgrade);\n    transport.open();\n};\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\nSocket.prototype.onOpen = function () {\n    this.readyState = 'open';\n    Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n    this.emit('open');\n    this.flush();\n    // we check for `readyState` in case an `open`\n    // listener already closed the socket\n    if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n        for (var i = 0, l = this.upgrades.length; i < l; i++) {\n            this.probe(this.upgrades[i]);\n        }\n    }\n};\n/**\n * Handles a packet.\n *\n * @api private\n */\nSocket.prototype.onPacket = function (packet) {\n    if ('opening' === this.readyState || 'open' === this.readyState ||\n        'closing' === this.readyState) {\n        this.emit('packet', packet);\n        // Socket is live - any packet counts\n        this.emit('heartbeat');\n        switch (packet.type) {\n            case 'open':\n                this.onHandshake(JSON.parse(packet.data));\n                break;\n            case 'pong':\n                this.setPing();\n                this.emit('pong');\n                break;\n            case 'error':\n                var err = new Error('server error');\n                err.code = packet.data;\n                this.onError(err);\n                break;\n            case 'message':\n                this.emit('data', packet.data);\n                this.emit('message', packet.data);\n                break;\n        }\n    }\n    else {\n    }\n};\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\nSocket.prototype.onHandshake = function (data) {\n    this.emit('handshake', data);\n    this.id = data.sid;\n    this.transport.query.sid = data.sid;\n    this.upgrades = this.filterUpgrades(data.upgrades);\n    this.pingInterval = data.pingInterval;\n    this.pingTimeout = data.pingTimeout;\n    this.onOpen();\n    // In case open handler closes socket\n    if ('closed' === this.readyState)\n        return;\n    this.setPing();\n    // Prolong liveness of socket on heartbeat\n    this.removeListener('heartbeat', this.onHeartbeat);\n    this.on('heartbeat', this.onHeartbeat);\n};\n/**\n * Resets ping timeout.\n *\n * @api private\n */\nSocket.prototype.onHeartbeat = function (timeout) {\n    clearTimeout(this.pingTimeoutTimer);\n    var self = this;\n    self.pingTimeoutTimer = setTimeout(function () {\n        if ('closed' === self.readyState)\n            return;\n        self.onClose('ping timeout');\n    }, timeout || (self.pingInterval + self.pingTimeout));\n};\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\nSocket.prototype.setPing = function () {\n    var self = this;\n    clearTimeout(self.pingIntervalTimer);\n    self.pingIntervalTimer = setTimeout(function () {\n        self.ping();\n        self.onHeartbeat(self.pingTimeout);\n    }, self.pingInterval);\n};\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\nSocket.prototype.ping = function () {\n    var self = this;\n    this.sendPacket('ping', function () {\n        self.emit('ping');\n    });\n};\n/**\n * Called on `outOfBand` event\n *\n * @api private\n */\nSocket.prototype.onOutOfBand = function (data) {\n    this.outOfBand(data);\n};\n/**\n * Called on `drain` event\n *\n * @api private\n */\nSocket.prototype.onDrain = function () {\n    this.writeBuffer.splice(0, this.prevBufferLen);\n    // setting prevBufferLen = 0 is very important\n    // for example, when upgrading, upgrade packet is sent over,\n    // and a nonzero prevBufferLen could cause problems on `drain`\n    this.prevBufferLen = 0;\n    if (0 === this.writeBuffer.length) {\n        this.emit('drain');\n    }\n    else {\n        this.flush();\n    }\n};\n/**\n * Flush write buffers.\n *\n * @api private\n */\nSocket.prototype.flush = function () {\n    if ('closed' !== this.readyState && this.transport.writable &&\n        !this.upgrading && this.writeBuffer.length) {\n        this.transport.send(this.writeBuffer);\n        // keep track of current length of writeBuffer\n        // splice writeBuffer and callbackBuffer on `drain`\n        this.prevBufferLen = this.writeBuffer.length;\n        this.emit('flush');\n    }\n};\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\nSocket.prototype.write =\n    Socket.prototype.send = function (msg, options, fn) {\n        this.sendPacket('message', msg, options, fn);\n        return this;\n    };\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n    if ('function' === typeof data) {\n        fn = data;\n        data = undefined;\n    }\n    if ('function' === typeof options) {\n        fn = options;\n        options = null;\n    }\n    if ('closing' === this.readyState || 'closed' === this.readyState) {\n        return;\n    }\n    options = options || {};\n    options.compress = false !== options.compress;\n    var packet = {\n        type: type,\n        data: data,\n        options: options\n    };\n    this.emit('packetCreate', packet);\n    this.writeBuffer.push(packet);\n    if (fn)\n        this.once('flush', fn);\n    this.flush();\n};\n/**\n * Closes the connection.\n *\n * @api private\n */\nSocket.prototype.close = function () {\n    if ('opening' === this.readyState || 'open' === this.readyState) {\n        this.readyState = 'closing';\n        var self = this;\n        if (this.writeBuffer.length) {\n            this.once('drain', function () {\n                if (this.upgrading) {\n                    waitForUpgrade();\n                }\n                else {\n                    close();\n                }\n            });\n        }\n        else if (this.upgrading) {\n            waitForUpgrade();\n        }\n        else {\n            close();\n        }\n    }\n    function close() {\n        self.onClose('forced close');\n        self.transport.close();\n    }\n    function cleanupAndClose() {\n        self.removeListener('upgrade', cleanupAndClose);\n        self.removeListener('upgradeError', cleanupAndClose);\n        close();\n    }\n    function waitForUpgrade() {\n        // wait for upgrade to finish since we can't send packets while pausing a transport\n        self.once('upgrade', cleanupAndClose);\n        self.once('upgradeError', cleanupAndClose);\n    }\n    return this;\n};\n/**\n * Called upon transport error\n *\n * @api private\n */\nSocket.prototype.onError = function (err) {\n    Socket.priorWebsocketSuccess = false;\n    this.emit('error', err);\n    this.onClose('transport error', err);\n};\n/**\n * Called upon transport close.\n *\n * @api private\n */\nSocket.prototype.onClose = function (reason, desc) {\n    if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n        var self = this;\n        // clear timers\n        clearTimeout(this.pingIntervalTimer);\n        clearTimeout(this.pingTimeoutTimer);\n        // stop event from firing again for transport\n        this.transport.removeAllListeners('close');\n        // ensure transport won't stay open\n        this.transport.close();\n        // ignore further transport communication\n        this.transport.removeAllListeners();\n        // set ready state\n        this.readyState = 'closed';\n        // clear session id\n        this.id = null;\n        // emit close event\n        this.emit('close', reason, desc);\n        // clean buffers after, so users can still\n        // grab the buffers on `close` event\n        self.writeBuffer = [];\n        self.prevBufferLen = 0;\n    }\n};\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\nSocket.prototype.filterUpgrades = function (upgrades) {\n    var filteredUpgrades = [];\n    for (var i = 0, j = upgrades.length; i < j; i++) {\n        if (~this.transports.indexOf(upgrades[i]))\n            filteredUpgrades.push(upgrades[i]);\n    }\n    return filteredUpgrades;\n};\nexport { Socket, };\n","import { Socket } from './socket';\n/**\n * Exports parser\n *\n * @api public\n *\n */\nimport parser from './engine.io-parser';\nexport default {\n    protocol: parser.protocol,\n    Socket,\n    parser,\n};\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nexport { installTimerFunctions };\nconst v4 = {\n    Socket,\n    protocol,\n    installTimerFunctions,\n};\nimport v3 from './v3/index.js';\nconst versions = [\n    v4,\n    v3,\n];\nfunction getVersion(v) {\n    return versions.find(el => el.protocol === v);\n}\nexport { v3, v4, versions, getVersion, };\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this.ids++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @private\n     */\n    _drainQueue() {\n        if (this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        const currentId = this.ids;\n        this.ids = packet.id; // the same id is reused for consecutive retries, in order to allow deduplication on the server side\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n        this.ids = currentId; // restore offset\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions,\n// nextTick,\n } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        //nextTick(() => {\n        this.emitReserved(\"packet\", packet);\n        //}, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        if (this._autoConnect) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","//import { parse } from \"engine.io-client\";\nimport parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        //obj = parse(uri) as ParsedUrl;\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","/**\n * Module dependencies.\n */\nimport parseuri from 'parseuri';\nimport debugModule from 'debug';\nvar debug = debugModule('socket.io-client:url');\n/**\n * Module exports.\n */\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\nfunction url(uri, loc) {\n    var obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== 'undefined' && location);\n    if (null == uri)\n        uri = loc.protocol + '//' + loc.host;\n    // relative path support\n    if ('string' === typeof uri) {\n        if ('/' === uri.charAt(0)) {\n            if ('/' === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug('protocol-less url %s', uri);\n            if ('undefined' !== typeof loc) {\n                uri = loc.protocol + '//' + uri;\n            }\n            else {\n                uri = 'https://' + uri;\n            }\n        }\n        // parse\n        debug('parse %s', uri);\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = '80';\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = '443';\n        }\n    }\n    obj.path = obj.path || '/';\n    var ipv6 = obj.host.indexOf(':') !== -1;\n    var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n    // define unique id\n    obj.id = obj.protocol + '://' + host + ':' + obj.port;\n    // define href\n    obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n    return obj;\n}\nexport { url as default, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\nfunction Emitter(obj) {\n    if (obj)\n        return mixin(obj);\n}\n;\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\nfunction mixin(obj) {\n    for (var key in Emitter.prototype) {\n        obj[key] = Emitter.prototype[key];\n    }\n    return obj;\n}\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\nEmitter.prototype.on =\n    Emitter.prototype.addEventListener = function (event, fn) {\n        this._callbacks = this._callbacks || {};\n        (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n            .push(fn);\n        return this;\n    };\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\nEmitter.prototype.once = function (event, fn) {\n    function on() {\n        this.off(event, on);\n        fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.on(event, on);\n    return this;\n};\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\nEmitter.prototype.off =\n    Emitter.prototype.removeListener =\n        Emitter.prototype.removeAllListeners =\n            Emitter.prototype.removeEventListener = function (event, fn) {\n                this._callbacks = this._callbacks || {};\n                // all\n                if (0 == arguments.length) {\n                    this._callbacks = {};\n                    return this;\n                }\n                // specific event\n                var callbacks = this._callbacks['$' + event];\n                if (!callbacks)\n                    return this;\n                // remove all handlers\n                if (1 == arguments.length) {\n                    delete this._callbacks['$' + event];\n                    return this;\n                }\n                // remove specific handler\n                var cb;\n                for (var i = 0; i < callbacks.length; i++) {\n                    cb = callbacks[i];\n                    if (cb === fn || cb.fn === fn) {\n                        callbacks.splice(i, 1);\n                        break;\n                    }\n                }\n                // Remove event specific arrays for event types that no\n                // one is subscribed for to avoid memory leak.\n                if (callbacks.length === 0) {\n                    delete this._callbacks['$' + event];\n                }\n                return this;\n            };\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\nEmitter.prototype.emit = function (event) {\n    this._callbacks = this._callbacks || {};\n    var args = new Array(arguments.length - 1), callbacks = this._callbacks['$' + event];\n    for (var i = 1; i < arguments.length; i++) {\n        args[i - 1] = arguments[i];\n    }\n    if (callbacks) {\n        callbacks = callbacks.slice(0);\n        for (var i = 0, len = callbacks.length; i < len; ++i) {\n            callbacks[i].apply(this, args);\n        }\n    }\n    return this;\n};\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\nEmitter.prototype.listeners = function (event) {\n    this._callbacks = this._callbacks || {};\n    return this._callbacks['$' + event] || [];\n};\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\nEmitter.prototype.hasListeners = function (event) {\n    return !!this.listeners(event).length;\n};\n/**\n * Wrap the prototype-based class with a TypeScript class.\n */\nclass TypeScriptEmitter {\n    constructor(obj = null) {\n        this.emitter = Emitter(obj || this);\n    }\n    on(event, fn) {\n        return this.emitter.on(event, fn);\n    }\n    once(event, fn) {\n        return this.emitter.once(event, fn);\n    }\n    removeListener(event, fn) {\n        return this.emitter.removeListener(event, fn);\n    }\n    removeAllListeners(event = undefined, fn = undefined) {\n        return this.emitter.removeAllListeners(event, fn);\n    }\n    emit(event, data = undefined, desc = undefined) {\n        if (typeof desc !== 'undefined') {\n            return this.emitter.emit(event, data, desc);\n        }\n        if (typeof data !== 'undefined') {\n            return this.emitter.emit(event, data);\n        }\n        return this.emitter.emit(event);\n    }\n}\nexport { Emitter as default, TypeScriptEmitter, mixin, };\n","var toString = {}.toString;\nexport default Array.isArray || function (arr) {\n    return toString.call(arr) == '[object Array]';\n};\n","var withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\nvar isView = function (obj) {\n    return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n};\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\nexport default function isBuf(obj) {\n    return (withNativeBuffer && Buffer.isBuffer(obj)) ||\n        (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\n}\n","/*global Blob,File*/\n/**\n * Module requirements\n */\nimport isArray from '../isarray';\nimport isBuf from './is-buffer';\nvar toStringFunc = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toStringFunc.call(Blob) === '[object BlobConstructor]');\nvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toStringFunc.call(File) === '[object FileConstructor]');\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\nconst deconstructPacket = function (packet) {\n    var buffers = [];\n    var packetData = packet.data;\n    var pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n};\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBuf(data)) {\n        var placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (isArray(data)) {\n        var newData = new Array(data.length);\n        for (var i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === 'object' && !(data instanceof Date)) {\n        var newData2 = {};\n        for (var key in data) {\n            newData2[key] = _deconstructPacket(data[key], buffers);\n        }\n        return newData2;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\nconst reconstructPacket = function (packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n};\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (isArray(data)) {\n        for (var i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === 'object') {\n        for (var key in data) {\n            data[key] = _reconstructPacket(data[key], buffers);\n        }\n    }\n    return data;\n}\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\nconst removeBlobs = function (data, callback) {\n    function _removeBlobs(obj, curKey = undefined, containingObject = undefined) {\n        if (!obj)\n            return obj;\n        // convert any blob\n        if ((withNativeBlob && obj instanceof Blob) ||\n            (withNativeFile && obj instanceof File)) {\n            pendingBlobs++;\n            // async filereader\n            var fileReader = new FileReader();\n            fileReader.onload = function () {\n                if (containingObject) {\n                    containingObject[curKey] = this.result;\n                }\n                else {\n                    bloblessData = this.result;\n                }\n                // if nothing pending its callback time\n                if (!--pendingBlobs) {\n                    callback(bloblessData);\n                }\n            };\n            fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n        }\n        else if (isArray(obj)) { // handle array\n            for (var i = 0; i < obj.length; i++) {\n                _removeBlobs(obj[i], i, obj);\n            }\n        }\n        else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n            for (var key in obj) {\n                _removeBlobs(obj[key], key, obj);\n            }\n        }\n    }\n    var pendingBlobs = 0;\n    var bloblessData = data;\n    _removeBlobs(bloblessData);\n    if (!pendingBlobs) {\n        callback(bloblessData);\n    }\n};\nexport default {\n    deconstructPacket,\n    reconstructPacket,\n    removeBlobs,\n};\n","/**\n * Module dependencies.\n */\nimport debugModule from 'debug';\nvar debug = debugModule('socket.io-parser');\nimport Emitter from '../component-emitter';\nimport binary from './binary';\nimport isArray from '../isarray';\nimport isBuf from './is-buffer';\n/**\n * Protocol version.\n *\n * @api public\n */\nconst protocol = 4;\n/**\n * Packet types.\n *\n * @api public\n */\nconst types = [\n    'CONNECT',\n    'DISCONNECT',\n    'EVENT',\n    'ACK',\n    'ERROR',\n    'BINARY_EVENT',\n    'BINARY_ACK'\n];\n/**\n * Packet type `connect`.\n *\n * @api public\n */\nconst CONNECT = 0;\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\nconst DISCONNECT = 1;\n/**\n * Packet type `event`.\n *\n * @api public\n */\nconst EVENT = 2;\n/**\n * Packet type `ack`.\n *\n * @api public\n */\nconst ACK = 3;\n/**\n * Packet type `error`.\n *\n * @api public\n */\nconst ERROR = 4;\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\nconst BINARY_EVENT = 5;\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\nconst BINARY_ACK = 6;\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\nfunction Encoder() { }\nconst ERROR_PACKET = ERROR + '\"encode error\"';\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\nEncoder.prototype.encode = function (obj, callback) {\n    debug('encoding packet %j', obj);\n    if (BINARY_EVENT === obj.type || BINARY_ACK === obj.type) {\n        encodeAsBinary(obj, callback);\n    }\n    else {\n        var encoding = encodeAsString(obj);\n        callback([encoding]);\n    }\n};\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\nfunction encodeAsString(obj) {\n    // first is type\n    var str = '' + obj.type;\n    // attachments if we have them\n    if (BINARY_EVENT === obj.type || BINARY_ACK === obj.type) {\n        str += obj.attachments + '-';\n    }\n    // if we have a namespace other than `/`\n    // we append it followed by a comma `,`\n    if (obj.nsp && '/' !== obj.nsp) {\n        str += obj.nsp + ',';\n    }\n    // immediately followed by the id\n    if (null != obj.id) {\n        str += obj.id;\n    }\n    // json data\n    if (null != obj.data) {\n        var payload = tryStringify(obj.data);\n        if (payload !== false) {\n            str += payload;\n        }\n        else {\n            return ERROR_PACKET;\n        }\n    }\n    debug('encoded %j as %s', obj, str);\n    return str;\n}\nfunction tryStringify(str) {\n    try {\n        return JSON.stringify(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\nfunction encodeAsBinary(obj, callback) {\n    function writeEncoding(bloblessData) {\n        var deconstruction = binary.deconstructPacket(bloblessData);\n        var pack = encodeAsString(deconstruction.packet);\n        var buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        callback(buffers); // write all the buffers\n    }\n    binary.removeBlobs(obj, writeEncoding);\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\nfunction Decoder() {\n    this.reconstructor = null;\n}\n/**\n * Mix in `Emitter` with Decoder.\n */\nEmitter(Decoder.prototype);\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\nDecoder.prototype.add = function (obj) {\n    var packet;\n    if (typeof obj === 'string') {\n        packet = decodeString(obj);\n        if (BINARY_EVENT === packet.type || BINARY_ACK === packet.type) { // binary packet's json\n            this.reconstructor = new BinaryReconstructor(packet);\n            // no attachments, labeled binary but no binary data to follow\n            if (this.reconstructor.reconPack.attachments === 0) {\n                this.emit('decoded', packet);\n            }\n        }\n        else { // non-binary full packet\n            this.emit('decoded', packet);\n        }\n    }\n    else if (isBuf(obj) || obj.base64) { // raw binary data\n        if (!this.reconstructor) {\n            throw new Error('got binary data when not reconstructing a packet');\n        }\n        else {\n            packet = this.reconstructor.takeBinaryData(obj);\n            if (packet) { // received final buffer\n                this.reconstructor = null;\n                this.emit('decoded', packet);\n            }\n        }\n    }\n    else {\n        throw new Error('Unknown type: ' + obj);\n    }\n};\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\nfunction decodeString(str) {\n    var i = 0;\n    // look up type\n    var p = {\n        type: Number(str.charAt(0))\n    };\n    if (null == types[p.type]) {\n        return error('unknown packet type ' + p.type);\n    }\n    // look up attachments if type binary\n    if (BINARY_EVENT === p.type || BINARY_ACK === p.type) {\n        var buf = '';\n        while (str.charAt(++i) !== '-') {\n            buf += str.charAt(i);\n            if (i == str.length)\n                break;\n        }\n        if (buf != Number(buf).toString() || str.charAt(i) !== '-') {\n            throw new Error('Illegal attachments');\n        }\n        p.attachments = Number(buf);\n    }\n    // look up namespace (if any)\n    if ('/' === str.charAt(i + 1)) {\n        p.nsp = '';\n        while (++i) {\n            var c = str.charAt(i);\n            if (',' === c)\n                break;\n            p.nsp += c;\n            if (i === str.length)\n                break;\n        }\n    }\n    else {\n        p.nsp = '/';\n    }\n    // look up id\n    var next = str.charAt(i + 1);\n    if ('' !== next && Number(next) == next) {\n        p.id = '';\n        while (++i) {\n            var c = str.charAt(i);\n            if (null == c || Number(c) != c) {\n                --i;\n                break;\n            }\n            p.id += str.charAt(i);\n            if (i === str.length)\n                break;\n        }\n        p.id = Number(p.id);\n    }\n    // look up json data\n    if (str.charAt(++i)) {\n        var payload = tryParse(str.substr(i));\n        var isPayloadValid = payload !== false && (p.type === ERROR || isArray(payload));\n        if (isPayloadValid) {\n            p.data = payload;\n        }\n        else {\n            return error('invalid payload');\n        }\n    }\n    debug('decoded %s as %j', str, p);\n    return p;\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\nDecoder.prototype.destroy = function () {\n    if (this.reconstructor) {\n        this.reconstructor.finishedReconstruction();\n    }\n};\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\nfunction BinaryReconstructor(packet) {\n    this.reconPack = packet;\n    this.buffers = [];\n}\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\nBinaryReconstructor.prototype.takeBinaryData = function (binData) {\n    this.buffers.push(binData);\n    if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n        var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n        this.finishedReconstruction();\n        return packet;\n    }\n    return null;\n};\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\nBinaryReconstructor.prototype.finishedReconstruction = function () {\n    this.reconPack = null;\n    this.buffers = [];\n};\nfunction error(msg) {\n    return {\n        type: ERROR,\n        data: 'parser error: ' + msg\n    };\n}\nexport default {\n    protocol,\n    types,\n    CONNECT,\n    DISCONNECT,\n    EVENT,\n    ACK,\n    ERROR,\n    BINARY_EVENT,\n    BINARY_ACK,\n    Encoder,\n    Decoder,\n};\n","export default function toArray(list, index = 0) {\n    var array = [];\n    index = index || 0;\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i];\n    }\n    return array;\n}\n","/**\n * Module exports.\n */\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return {\n        destroy: function () {\n            obj.removeListener(ev, fn);\n        }\n    };\n}\nexport { on as default, };\n","/**\n * Slice reference.\n */\nvar slice = [].slice;\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\nexport default function (obj, fn) {\n    if ('string' == typeof fn)\n        fn = obj[fn];\n    if ('function' != typeof fn)\n        throw new Error('bind() requires a function');\n    var args = slice.call(arguments, 2);\n    return function () {\n        return fn.apply(obj, args.concat(slice.call(arguments)));\n    };\n}\n;\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","/* global Blob File */\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === 'function' ||\n    typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nconst withNativeFile = typeof File === 'function' ||\n    typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\nconst withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n};\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\nexport default function hasBinary(obj, b = false) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n        return true;\n    }\n    // see: https://github.com/Automattic/has-binary/pull/4\n    if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Module dependencies.\n */\nimport parser from './socket.io-parser';\nimport Emitter from './component-emitter';\nimport toArray from './to-array';\nimport on from './on';\nimport bind from './component-bind';\nimport debugModule from 'debug';\nvar debug = debugModule('socket.io-client:socket');\nimport parseqs from 'parseqs';\nimport hasBin from './has-binary2';\n/**\n * Module exports.\n */\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\nvar events = {\n    connect: 1,\n    connect_error: 1,\n    connect_timeout: 1,\n    connecting: 1,\n    disconnect: 1,\n    error: 1,\n    reconnect: 1,\n    reconnect_attempt: 1,\n    reconnect_failed: 1,\n    reconnect_error: 1,\n    reconnecting: 1,\n    ping: 1,\n    pong: 1\n};\n/**\n * Shortcut to `Emitter#emit`.\n */\nvar emit = Emitter.prototype.emit;\n/**\n * `Socket` constructor.\n *\n * @api public\n */\nfunction Socket(io, nsp, opts) {\n    this.io = io;\n    this.nsp = nsp;\n    this.json = this; // compat\n    this.ids = 0;\n    this.acks = {};\n    this.receiveBuffer = [];\n    this.sendBuffer = [];\n    this.connected = false;\n    this.disconnected = true;\n    this.flags = {};\n    if (opts && opts.query) {\n        this.query = opts.query;\n    }\n    if (this.io.autoConnect)\n        this.open();\n}\n/**\n * Mix in `Emitter`.\n */\nEmitter(Socket.prototype);\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\nSocket.prototype.subEvents = function () {\n    if (this.subs)\n        return;\n    var io = this.io;\n    this.subs = [\n        on(io, 'open', bind(this, 'onopen')),\n        on(io, 'packet', bind(this, 'onpacket')),\n        on(io, 'close', bind(this, 'onclose'))\n    ];\n};\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\nSocket.prototype.open =\n    Socket.prototype.connect = function () {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        this.io.open(); // ensure open\n        if ('open' === this.io.readyState)\n            this.onopen();\n        this.emit('connecting');\n        return this;\n    };\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\nSocket.prototype.send = function () {\n    var args = toArray(arguments);\n    args.unshift('message');\n    this.emit.apply(this, args);\n    return this;\n};\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\nSocket.prototype.emit = function (ev) {\n    if (events.hasOwnProperty(ev)) {\n        emit.apply(this, arguments);\n        return this;\n    }\n    var args = toArray(arguments);\n    var packet = {\n        type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n        data: args\n    };\n    packet.options = {};\n    packet.options.compress = !this.flags || false !== this.flags.compress;\n    // event ack callback\n    if ('function' === typeof args[args.length - 1]) {\n        debug('emitting packet with ack id %d', this.ids);\n        this.acks[this.ids] = args.pop();\n        packet.id = this.ids++;\n    }\n    if (this.connected) {\n        this.packet(packet);\n    }\n    else {\n        this.sendBuffer.push(packet);\n    }\n    this.flags = {};\n    return this;\n};\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\nSocket.prototype.packet = function (packet) {\n    packet.nsp = this.nsp;\n    this.io.packet(packet);\n};\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\nSocket.prototype.onopen = function () {\n    debug('transport is open - connecting');\n    // write connect packet if necessary\n    if ('/' !== this.nsp) {\n        if (this.query) {\n            var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n            debug('sending connect packet with query %s', query);\n            this.packet({ type: parser.CONNECT, query: query });\n        }\n        else {\n            this.packet({ type: parser.CONNECT });\n        }\n    }\n};\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\nSocket.prototype.onclose = function (reason) {\n    debug('close (%s)', reason);\n    this.connected = false;\n    this.disconnected = true;\n    delete this.id;\n    this.emit('disconnect', reason);\n};\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\nSocket.prototype.onpacket = function (packet) {\n    var sameNamespace = packet.nsp === this.nsp;\n    var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n    if (!sameNamespace && !rootNamespaceError)\n        return;\n    switch (packet.type) {\n        case parser.CONNECT:\n            this.onconnect();\n            break;\n        case parser.EVENT:\n            this.onevent(packet);\n            break;\n        case parser.BINARY_EVENT:\n            this.onevent(packet);\n            break;\n        case parser.ACK:\n            this.onack(packet);\n            break;\n        case parser.BINARY_ACK:\n            this.onack(packet);\n            break;\n        case parser.DISCONNECT:\n            this.ondisconnect();\n            break;\n        case parser.ERROR:\n            this.emit('error', packet.data);\n            break;\n    }\n};\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\nSocket.prototype.onevent = function (packet) {\n    var args = packet.data || [];\n    debug('emitting event %j', args);\n    if (null != packet.id) {\n        debug('attaching ack callback to event');\n        args.push(this.ack(packet.id));\n    }\n    if (this.connected) {\n        emit.apply(this, args);\n    }\n    else {\n        this.receiveBuffer.push(args);\n    }\n};\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\nSocket.prototype.ack = function (id) {\n    var self = this;\n    var sent = false;\n    return function () {\n        // prevent double callbacks\n        if (sent)\n            return;\n        sent = true;\n        var args = toArray(arguments);\n        debug('sending ack %j', args);\n        self.packet({\n            type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n            id: id,\n            data: args\n        });\n    };\n};\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\nSocket.prototype.onack = function (packet) {\n    var ack = this.acks[packet.id];\n    if ('function' === typeof ack) {\n        debug('calling ack %s with %j', packet.id, packet.data);\n        ack.apply(this, packet.data);\n        delete this.acks[packet.id];\n    }\n    else {\n        debug('bad ack %s', packet.id);\n    }\n};\n/**\n * Called upon server connect.\n *\n * @api private\n */\nSocket.prototype.onconnect = function () {\n    this.connected = true;\n    this.disconnected = false;\n    this.emit('connect');\n    this.emitBuffered();\n};\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\nSocket.prototype.emitBuffered = function () {\n    var i;\n    for (i = 0; i < this.receiveBuffer.length; i++) {\n        emit.apply(this, this.receiveBuffer[i]);\n    }\n    this.receiveBuffer = [];\n    for (i = 0; i < this.sendBuffer.length; i++) {\n        this.packet(this.sendBuffer[i]);\n    }\n    this.sendBuffer = [];\n};\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\nSocket.prototype.ondisconnect = function () {\n    debug('server disconnect (%s)', this.nsp);\n    this.destroy();\n    this.onclose('io server disconnect');\n};\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\nSocket.prototype.destroy = function () {\n    if (this.subs) {\n        // clean subscriptions to avoid reconnections\n        for (var i = 0; i < this.subs.length; i++) {\n            this.subs[i].destroy();\n        }\n        this.subs = null;\n    }\n    this.io.destroy(this);\n};\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\nSocket.prototype.close =\n    Socket.prototype.disconnect = function () {\n        if (this.connected) {\n            debug('performing disconnect (%s)', this.nsp);\n            this.packet({ type: parser.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose('io client disconnect');\n        }\n        return this;\n    };\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\nSocket.prototype.compress = function (compress) {\n    this.flags.compress = compress;\n    return this;\n};\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\nSocket.prototype.binary = function (binary) {\n    this.flags.binary = binary;\n    return this;\n};\nexport { Socket as default, };\n","var indexOf = [].indexOf;\nexport default function (arr, obj) {\n    if (indexOf)\n        return arr.indexOf(obj);\n    for (var i = 0; i < arr.length; ++i) {\n        if (arr[i] === obj)\n            return i;\n    }\n    return -1;\n}\n;\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport default function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","/**\n * Module dependencies.\n */\nimport { v3 } from 'engine.io-client';\nvar eio = v3.Socket;\nimport Socket from './socket';\nimport Emitter from './component-emitter';\nimport parser from './socket.io-parser';\nimport on from './on';\nimport bind from './component-bind';\nimport debugModule from 'debug';\nvar debug = debugModule('socket.io-client:manager');\nimport indexOf from './indexof';\nimport Backoff from './backo2';\n/**\n * IE6+ hasOwnProperty\n */\nvar has = Object.prototype.hasOwnProperty;\n/**\n * Module exports\n */\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\nfunction Manager(uri, opts) {\n    //  if (!(this instanceof Manager)) return new Manager(uri, opts);\n    if (!(this instanceof Manager))\n        console.error('socket.io-client:Is not a Manager');\n    if (uri && ('object' === typeof uri)) {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    opts.path = opts.path || '/socket.io';\n    this.nsps = {};\n    this.subs = [];\n    this.opts = opts;\n    this.reconnection(opts.reconnection !== false);\n    this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n    this.reconnectionDelay(opts.reconnectionDelay || 1000);\n    this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n    this.randomizationFactor(opts.randomizationFactor || 0.5);\n    this.backoff = new Backoff({\n        min: this.reconnectionDelay(),\n        max: this.reconnectionDelayMax(),\n        jitter: this.randomizationFactor()\n    });\n    this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n    this.readyState = 'closed';\n    this.uri = uri;\n    this.connecting = [];\n    this.lastPing = null;\n    this.encoding = false;\n    this.packetBuffer = [];\n    var _parser = opts.parser || parser;\n    this.encoder = new _parser.Encoder();\n    this.decoder = new _parser.Decoder();\n    this.autoConnect = opts.autoConnect !== false;\n    if (this.autoConnect)\n        this.open();\n}\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\nManager.prototype.emitAll = function () {\n    this.emit.apply(this, arguments);\n    for (var nsp in this.nsps) {\n        if (has.call(this.nsps, nsp)) {\n            this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n        }\n    }\n};\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\nManager.prototype.updateSocketIds = function () {\n    for (var nsp in this.nsps) {\n        if (has.call(this.nsps, nsp)) {\n            this.nsps[nsp].id = this.generateId(nsp);\n        }\n    }\n};\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\nManager.prototype.generateId = function (nsp) {\n    return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n/**\n * Mix in `Emitter`.\n */\nEmitter(Manager.prototype);\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\nManager.prototype.reconnection = function (v) {\n    if (!arguments.length)\n        return this._reconnection;\n    this._reconnection = !!v;\n    return this;\n};\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\nManager.prototype.reconnectionAttempts = function (v) {\n    if (!arguments.length)\n        return this._reconnectionAttempts;\n    this._reconnectionAttempts = v;\n    return this;\n};\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\nManager.prototype.reconnectionDelay = function (v) {\n    if (!arguments.length)\n        return this._reconnectionDelay;\n    this._reconnectionDelay = v;\n    this.backoff && this.backoff.setMin(v);\n    return this;\n};\nManager.prototype.randomizationFactor = function (v) {\n    if (!arguments.length)\n        return this._randomizationFactor;\n    this._randomizationFactor = v;\n    this.backoff && this.backoff.setJitter(v);\n    return this;\n};\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\nManager.prototype.reconnectionDelayMax = function (v) {\n    if (!arguments.length)\n        return this._reconnectionDelayMax;\n    this._reconnectionDelayMax = v;\n    this.backoff && this.backoff.setMax(v);\n    return this;\n};\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\nManager.prototype.timeout = function (v) {\n    if (!arguments.length)\n        return this._timeout;\n    this._timeout = v;\n    return this;\n};\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\nManager.prototype.maybeReconnectOnOpen = function () {\n    // Only try to reconnect if it's the first time we're connecting\n    if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n        // keeps reconnection from firing twice for the same reconnection loop\n        this.reconnect();\n    }\n};\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\nManager.prototype.open =\n    Manager.prototype.connect = function (fn, opts) {\n        debug('readyState %s', this.readyState);\n        if (~this.readyState.indexOf('open'))\n            return this;\n        debug('opening %s', this.uri);\n        this.engine = new eio(this.uri, this.opts);\n        var socket = this.engine;\n        var self = this;\n        this.readyState = 'opening';\n        this.skipReconnect = false;\n        // emit `open`\n        var openSub = on(socket, 'open', function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `connect_error`\n        var errorSub = on(socket, 'error', function (data) {\n            debug('connect_error');\n            self.cleanup();\n            self.readyState = 'closed';\n            self.emitAll('connect_error', data);\n            if (fn) {\n                var err = new Error('Connection error');\n                err.data = data;\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        // emit `connect_timeout`\n        if (false !== this._timeout) {\n            var timeout = this._timeout;\n            debug('connect attempt will timeout after %d', timeout);\n            // set timer\n            var timer = setTimeout(function () {\n                debug('connect attempt timed out after %d', timeout);\n                openSub.destroy();\n                socket.close();\n                socket.emit('error', 'timeout');\n                self.emitAll('connect_timeout', timeout);\n            }, timeout);\n            this.subs.push({\n                destroy: function () {\n                    clearTimeout(timer);\n                }\n            });\n        }\n        this.subs.push(openSub);\n        this.subs.push(errorSub);\n        return this;\n    };\n/**\n * Called upon transport open.\n *\n * @api private\n */\nManager.prototype.onopen = function () {\n    debug('open');\n    // clear old subs\n    this.cleanup();\n    // mark as open\n    this.readyState = 'open';\n    this.emit('open');\n    // add new subs\n    var socket = this.engine;\n    this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n    this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n    this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n    this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n    this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n    this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n/**\n * Called upon a ping.\n *\n * @api private\n */\nManager.prototype.onping = function () {\n    this.lastPing = new Date();\n    this.emitAll('ping');\n};\n/**\n * Called upon a packet.\n *\n * @api private\n */\nManager.prototype.onpong = function () {\n    var now = new Date();\n    this.emitAll('pong', now - this.lastPing);\n};\n/**\n * Called with data.\n *\n * @api private\n */\nManager.prototype.ondata = function (data) {\n    this.decoder.add(data);\n};\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\nManager.prototype.ondecoded = function (packet) {\n    this.emit('packet', packet);\n};\n/**\n * Called upon socket error.\n *\n * @api private\n */\nManager.prototype.onerror = function (err) {\n    debug('error', err);\n    this.emitAll('error', err);\n};\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\nManager.prototype.socket = function (nsp, opts) {\n    var socket = this.nsps[nsp];\n    if (!socket) {\n        socket = new Socket(this, nsp, opts);\n        this.nsps[nsp] = socket;\n        var self = this;\n        socket.on('connecting', onConnecting);\n        socket.on('connect', function () {\n            socket.id = self.generateId(nsp);\n        });\n        if (this.autoConnect) {\n            // manually call here since connecting event is fired before listening\n            onConnecting();\n        }\n    }\n    function onConnecting() {\n        if (!~indexOf(self.connecting, socket)) {\n            self.connecting.push(socket);\n        }\n    }\n    return socket;\n};\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\nManager.prototype.destroy = function (socket) {\n    var index = indexOf(this.connecting, socket);\n    if (~index)\n        this.connecting.splice(index, 1);\n    if (this.connecting.length)\n        return;\n    this.close();\n};\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\nManager.prototype.packet = function (packet) {\n    debug('writing packet %j', packet);\n    var self = this;\n    if (packet.query && packet.type === 0)\n        packet.nsp += '?' + packet.query;\n    if (!self.encoding) {\n        // encode, then write to engine with result\n        self.encoding = true;\n        this.encoder.encode(packet, function (encodedPackets) {\n            for (var i = 0; i < encodedPackets.length; i++) {\n                self.engine.write(encodedPackets[i], packet.options);\n            }\n            self.encoding = false;\n            self.processPacketQueue();\n        });\n    }\n    else { // add packet to the queue\n        self.packetBuffer.push(packet);\n    }\n};\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\nManager.prototype.processPacketQueue = function () {\n    if (this.packetBuffer.length > 0 && !this.encoding) {\n        var pack = this.packetBuffer.shift();\n        this.packet(pack);\n    }\n};\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\nManager.prototype.cleanup = function () {\n    debug('cleanup');\n    var subsLength = this.subs.length;\n    for (var i = 0; i < subsLength; i++) {\n        var sub = this.subs.shift();\n        sub.destroy();\n    }\n    this.packetBuffer = [];\n    this.encoding = false;\n    this.lastPing = null;\n    this.decoder.destroy();\n};\n/**\n * Close the current socket.\n *\n * @api private\n */\nManager.prototype.close =\n    Manager.prototype.disconnect = function () {\n        debug('disconnect');\n        this.skipReconnect = true;\n        this.reconnecting = false;\n        if ('opening' === this.readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this.readyState = 'closed';\n        if (this.engine)\n            this.engine.close();\n    };\n/**\n * Called upon engine close.\n *\n * @api private\n */\nManager.prototype.onclose = function (reason) {\n    debug('onclose');\n    this.cleanup();\n    this.backoff.reset();\n    this.readyState = 'closed';\n    this.emit('close', reason);\n    if (this._reconnection && !this.skipReconnect) {\n        this.reconnect();\n    }\n};\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\nManager.prototype.reconnect = function () {\n    if (this.reconnecting || this.skipReconnect)\n        return this;\n    var self = this;\n    if (this.backoff.attempts >= this._reconnectionAttempts) {\n        debug('reconnect failed');\n        this.backoff.reset();\n        this.emitAll('reconnect_failed');\n        this.reconnecting = false;\n    }\n    else {\n        var delay = this.backoff.duration();\n        debug('will wait %dms before reconnect attempt', delay);\n        this.reconnecting = true;\n        var timer = setTimeout(function () {\n            if (self.skipReconnect)\n                return;\n            debug('attempting reconnect');\n            self.emitAll('reconnect_attempt', self.backoff.attempts);\n            self.emitAll('reconnecting', self.backoff.attempts);\n            // check again for the case socket closed in above events\n            if (self.skipReconnect)\n                return;\n            self.open(function (err) {\n                if (err) {\n                    debug('reconnect attempt error');\n                    self.reconnecting = false;\n                    self.reconnect();\n                    self.emitAll('reconnect_error', err.data);\n                }\n                else {\n                    debug('reconnect success');\n                    self.onreconnect();\n                }\n            });\n        }, delay);\n        this.subs.push({\n            destroy: function () {\n                clearTimeout(timer);\n            }\n        });\n    }\n};\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\nManager.prototype.onreconnect = function () {\n    var attempt = this.backoff.attempts;\n    this.reconnecting = false;\n    this.backoff.reset();\n    this.updateSocketIds();\n    this.emitAll('reconnect', attempt);\n};\nexport { Manager as default, };\n","/**\n * Module dependencies.\n */\nimport url from './url';\nimport parser from './socket.io-parser';\nimport Manager from './manager';\nimport debugModule from 'debug';\nvar debug = debugModule('socket.io-client');\n/**\n * Module exports.\n */\n/**\n * Managers cache.\n */\nvar cache = {};\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\nfunction lookup(uri, opts) {\n    if (typeof uri === 'object') {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    var parsed = url(uri, null);\n    var source = parsed.source;\n    var id = parsed.id;\n    var path = parsed.path;\n    var sameNamespace = cache[id] && path in cache[id].nsps;\n    var newConnection = opts.forceNew || opts['force new connection'] ||\n        false === opts.multiplex || sameNamespace;\n    var io;\n    if (newConnection) {\n        debug('ignoring socket cache for %s', source);\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug('new io instance for %s', source);\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.query;\n    }\n    return io.socket(parsed.path, opts);\n}\n/**\n * Protocol version.\n *\n * @api public\n */\nvar protocol = parser.protocol;\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\nconst connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\nimport { v3 as eio } from 'engine.io-client';\nimport Socket from './socket';\nconst v4 = {\n    eio,\n    name: 'socket.io-client',\n    managers: cache,\n    protocol,\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n    default: lookup,\n};\nexport { v4 };\n","import { v4 as eio } from 'engine.io-client';\nimport { protocol, Manager, Socket, io } from \"./index.js\";\nimport { v4 } from \"./v3/index.js\";\n/**\n These versions are super confusing and obnoxious.\n socket.io-client protocol 5 uses engine.io protocol 4\n socket.io-client protocol 4 uses engine.io protocol 3\n Internally, just call it by the engine.io version\n On export, rename v4 to v5 and v3 to v4\n */\nconst v5 = {\n    eio,\n    protocol,\n    Manager,\n    Socket,\n    io,\n    connect: io,\n};\nconst versions = [\n    v5,\n    v4,\n];\nfunction getEioProtocolVersion(v) {\n    return versions.find(el => el.eio.protocol === v);\n}\nexport { v5, v4, versions, getEioProtocolVersion, };\n"],"names":["hasCorsModule","XMLHttpRequest","err","self","window","Function","opts","xdomain","hasCORS","e","globalThis","concat","join","pick","obj","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","Emitter","key","prototype","mixin","on","addEventListener","event","fn","_callbacks","this","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","splice","emit","args","Array","len","slice","emitReserved","listeners","hasListeners","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","prev","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","count","packet","decodePayload","encodedPayload","decodedPacket","Transport","writable","query","readyState","socket","msg","desc","Error","description","doOpen","doClose","onClose","write","onPacket","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","yeast_1","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","Polling","polling","poll","onPause","pause","_this2","total","doPoll","_this3","onOpen","close","_this4","_this5","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","indexOf","path","empty","hasXHR2","responseType","XHR","location","isSSL","protocol","xd","xs","forceBase64","Request","uri","req","request","method","onError","onData","pollXhr","async","undefined","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","onSuccess","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","lastPacket","name","transports","websocket","re","parts","parseuri","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","substr","queryKey","$0","$1","$2","Socket","_this","writeBuffer","prevBufferLen","_extends","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","o","clone","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","byteLength","size","options","compress","_this6","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j","enablesXDR","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","value","extra","output","counter","checkScalarValue","codePoint","strict","toUpperCase","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","version","codePoints","byteString","tmp","array","ucs2encode","withNativeFile","File","hasBinary","_typeof","isArray","toJSON","noop","arr","has","Buffer","encoding","v","a","ping","pong","message","packetslist","utf8encode","isBuffer","encodeBuffer","arrayBufferToBuffer","utf8","encodeBase64Packet","typeBuffer","utf8decode","tryDecode","intArray","abv","ary","each","done","next","err_cb","bail","proxy","after","bufferToString","stringToBuffer","buf","writeUInt8","offset","byteOffset","encodePayloadAsBinary","encodeOneBinaryPacket","results","doneCallback","sizeBuffer","encodingLength","parseInt","decodePayloadAsBinary","bufferTail","buffers","strLen","isString","msgLength","setLengthHeader","n","chr","pfx","passphrase","cert","ca","ciphers","forceNode","localAddress","constructor","parser","outOfBand","s","h","d","w","y","ms","val","match","parseFloat","isFinite","msAbs","abs","plural","fmtLong","round","fmtShort","stringify","isPlural","common","env","createDebug","namespace","prevTime","namespacesCache","enabledCache","enableOverride","debug","enabled","curr","diff","coerce","unshift","format","formatter","formatters","formatArgs","logFn","log","useColors","color","selectColor","extend","destroy","defineProperty","enumerable","configurable","get","namespaces","set","init","delimiter","newDebug","toNamespace","regexp","stack","disable","skips","enable","save","RegExp","test","humanize","require$$0","console","warn","hash","colors","load","warned","exports","module","lastC","storage","setItem","removeItem","r","getItem","process","DEBUG","__nwjs","userAgent","documentElement","style","WebkitAppearance","firebug","exception","table","localStorage","localstorage","debugModule","inherit","cleanData","matchPos","pos","startsWith","start","end","del","heur","callbackfn","isBinary","sendXhr","hasXDR","contentType","getResponseHeader","response","terminationEvent","rNewline","rEscapedNewline","JSONPPolling","script","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","area","iframeId","className","position","top","left","target","setAttribute","complete","initIframe","html","action","submit","BrowserWebSocket","NodeWebSocket","require","WebSocketImpl","usingBrowserWebSocket","supports","binary","jsonp","forceJSONP","JSONP","policyPort","onlyBinaryUpgrades","pingIntervalTimer","onOutOfBand","upgradeLosesBinary","setPing","onHeartbeat","v4","deconstructPacket","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","deconstruction","Decoder","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","ids","acks","flags","auth","_opts","_autoConnect","subs","onpacket","subEvents","_readyState","retries","fromQueue","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","notifyOutgoingListeners","_a","ackTimeout","timer","withErr","reject","arg1","arg2","tryCount","pending","hasError","responseArgs","_drainQueue","currentId","_packet","_sendConnectPacket","_pid","pid","_lastOffset","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","Backoff","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","href","url","sameNamespace","forceNew","multiplex","withNativeBuffer","isBuf","toStringFunc","newData2","pendingBlobs","bloblessData","_removeBlobs","curKey","containingObject","readAsArrayBuffer","types","tryStringify","ERROR","writeEncoding","toArray","list","events","connect_timeout","connecting","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","json","disconnected","hasBin","rootNamespaceError","eio","v3","lastPing","packetBuffer","emitAll","updateSocketIds","generateId","openSub","onpong","onConnecting","processPacketQueue","subsLength","managers","v5","versions","find","el"],"mappings":"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"}